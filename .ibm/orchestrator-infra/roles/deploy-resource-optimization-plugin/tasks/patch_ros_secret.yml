---
- name: Find the namespace where backstage is deployed
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  ansible.builtin.shell: |
    oc get secret --all-namespaces | grep backstage-backend-auth-secret | awk '{print $1}'
  register: backstage_namespace
  changed_when: false
  failed_when: backstage_namespace.stdout == ""

- name: Display found backstage namespace
  ansible.builtin.debug:
    msg: "Found backstage in namespace: {{ backstage_namespace.stdout }}"

- name: Patch backstage backend auth secret with ROS client id and secret
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  ansible.builtin.shell: |
    oc create secret generic "{{ ros_plugin_secret_name }}" \
      --from-literal=ROS_CLIENT_ID="{{ ros_client_id }}" \
      --from-literal=ROS_CLIENT_SECRET="{{ ros_client_secret }}" \
      -n "{{ backstage_namespace.stdout }}" \
      --dry-run=client -o yaml | oc apply -f -
  when: backstage_namespace.stdout is defined and backstage_namespace.stdout != ""
