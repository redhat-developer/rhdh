- name: Create work dir
  ansible.builtin.file:
    path: "{{ odf_work_dir }}"
    state: "{{ item }}"
  loop:
    - absent
    - directory

- name: Get cluster name
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}" 
  ansible.builtin.shell: |
    oc cluster-info
  register: cluster_info

- name: Set cluster name fact
  ansible.builtin.set_fact:
    cluster_name: "{{ cluster_info.stdout | regex_search('api\\.(.*?)\\.[^:]*', '\\1') | first }}"

- name: Get cluster id from assisted installer
  ansible.builtin.uri:
    url: "{{ assisted_api }}/clusters"
    method: GET
    headers:
      Content-Type: "application/json"
    return_content: yes
    status_code: 200
  register: api_output

- name: Set cluster id fact
  vars:
    clusters_json: "{{ api_output.content | from_json }}"
    query: "[?name=='{{ cluster_name }}'].id | [0]"
  ansible.builtin.set_fact:
    cluster_id: "{{ clusters_json | json_query(query) }}"
  failed_when: cluster_id == ''

- name: Set cluster status fact
  vars:
    clusters_json: "{{ api_output.content | from_json }}"
    query: "[?name=='{{ cluster_name }}'].status | [0]"
  ansible.builtin.set_fact:
    cluster_status: "{{ clusters_json | json_query(query) }}"
  failed_when: cluster_status == ''  

- name: Get infraenv id from assisted installer
  ansible.builtin.uri:
    url: "{{ assisted_api }}/infra-envs"
    method: GET
    headers:
      Content-Type: "application/json"
    return_content: yes
    status_code: 200
  register: api_output

- name: Set infraenv id fact
  vars:
    clusters_json: "{{ api_output.content | from_json }}"
    query: "[?cluster_id=='{{ cluster_id }}'].id | [0]"
  ansible.builtin.set_fact:
    infraenv_id: "{{ clusters_json | json_query(query) }}"
  failed_when: infraenv_id == ''

- name: Delete node recovery if it exists
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}" 
  ansible.builtin.shell: |
    oc delete noderecoveries.odf.openshift.io noderecovery-test
  ignore_errors: true

- name: Ensure Ceph tools shows healthy status before starting tests
  ansible.builtin.import_tasks: ceph-status.yml
  retries: 3
  delay: 5
  until: "'HEALTH_OK' in {{ ceph_status.stdout }}"

- name: Disable Ceph tools for testing
  ansible.builtin.import_tasks: disable-ceph-tools.yml
