---
- name: Create workflow work directory
  ansible.builtin.file:
    path: "{{ workflow_work_dir }}"
    state: directory
    mode: '0755'

- name: Find the namespace where SonataFlow services are deployed
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  ansible.builtin.shell: |
    oc get deployment --all-namespaces | grep sonataflow-platform-data-index-service | awk '{print $1}'
  register: sonataflow_deployment_namespace
  changed_when: false
  failed_when: sonataflow_deployment_namespace.stdout == ""

- name: Display found SonataFlow namespace
  ansible.builtin.debug:
    msg: "Found SonataFlow services in namespace: {{ sonataflow_deployment_namespace.stdout }}"

- name: Set fact for SonataFlow namespace
  ansible.builtin.set_fact:
    sonataflow_namespace: "{{ sonataflow_deployment_namespace.stdout }}"

- name: Determine workflow deployment namespace
  ansible.builtin.set_fact:
    workflow_deployment_namespace: "{{ sonataflow_namespace }}"

- name: Display workflow deployment namespace
  ansible.builtin.debug:
    msg: "Resource optimization workflow will be deployed to namespace: {{ workflow_deployment_namespace }}"

- name: Check if workflow namespace exists
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  ansible.builtin.shell: |
    oc get namespace {{ workflow_deployment_namespace }} --no-headers
  register: namespace_exists
  changed_when: false
  failed_when: false

- name: Create namespace if it doesn't exist (for non-helm managed deployments)
  when: 
    - not helm_managed_rhdh | bool
    - workflow_deployment_namespace != "sonataflow-infra"
    - namespace_exists.rc != 0
  shell: |
    oc create namespace {{ workflow_deployment_namespace }}
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  ignore_errors: true

- name: Display namespace status
  ansible.builtin.debug:
    msg: "Namespace {{ workflow_deployment_namespace }} {{ 'already exists' if namespace_exists.rc == 0 else 'will be created' }}"

- name: Label workflow namespace 
  when: not helm_managed_rhdh | bool
  shell: |
      oc label ns {{ workflow_deployment_namespace }} rhdh.redhat.com/workflow-namespace=""
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"   

- name: Copy sshkeys secret from sonataflow namespace (for non-helm managed deployments)
  when: not helm_managed_rhdh | bool
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  shell: |
    kubectl get secret sonataflow-psql-postgresql --namespace=sonataflow-infra -o yaml | sed 's/namespace: .*/namespace: {{ workflow_deployment_namespace }}/' | kubectl apply -f -
  ignore_errors: true
