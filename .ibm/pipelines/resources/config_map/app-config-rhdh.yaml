app:
  support:
    url: https://github.com/redhat-developer/rhdh/issues
    items:
      - title: Red Hat Developer Hub
        links:
          - url: https://access.redhat.com/products/red-hat-developer-hub
            title: Product Information
  baseUrl: ${RHDH_BASE_URL}
  title: Red Hat Developer Hub
  branding:
    fullLogo: # QE Red Hat Developer Hub
      light: "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22160pt%22%20height%3D%2280pt%22%20viewBox%3D%220%200%20160%2080%22%3E%3Cg%20fill%3D%22%23000%22%20style%3D%22text-align%3Astart%3Btext-align-last%3Aauto%22%20letter-spacing%3D%220%22%3E%3Ctext%20font-family%3D%22Red%20Hat%20Display%22%20font-size%3D%2240%22%20font-weight%3D%22700%22%20transform%3D%22translate(-.177%2054.263)%22%20word-spacing%3D%220%22%3E%3Ctspan%20x%3D%220%22%3EQE%3C%2Ftspan%3E%3C%2Ftext%3E%3Ctext%20font-family%3D%22Red%20Hat%20Text%22%20font-size%3D%2214%22%20font-weight%3D%22700%22%20transform%3D%22translate(57.565%2035.73)%22%20word-spacing%3D%220%22%3E%3Ctspan%20x%3D%220%22%3ERed%20Hat%3C%2Ftspan%3E%3Ctspan%20x%3D%220%22%20dy%3D%2218.516%22%3EDeveloper%20Hub%3C%2Ftspan%3E%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fsvg%3E"
      dark: "" # Dark logo in dynamic-global-header-config.yaml
    iconLogo: # QE icon
      light: "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2280pt%22%20height%3D%2280pt%22%20viewBox%3D%220%200%2080%2080%22%3E%3Ctext%20fill%3D%22%23000%22%20font-family%3D%22Red%20Hat%20Mono%22%20font-size%3D%2264%22%20font-weight%3D%22700%22%20letter-spacing%3D%220%22%20style%3D%22text-align%3Astart%3Btext-align-last%3Aauto%22%20transform%3D%22translate(1.6%2062.813)%22%20word-spacing%3D%220%22%3E%3Ctspan%20x%3D%220%22%3EQE%3C%2Ftspan%3E%3C%2Ftext%3E%3C%2Fsvg%3E"
      dark: "data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2280pt%22%20height%3D%2280pt%22%20viewBox%3D%220%200%2080%2080%22%3E%3Ctext%20fill%3D%22%23fff%22%20font-family%3D%22Red%20Hat%20Mono%22%20font-size%3D%2264%22%20font-weight%3D%22700%22%20letter-spacing%3D%220%22%20style%3D%22text-align%3Astart%3Btext-align-last%3Aauto%22%20transform%3D%22translate(1.6%2062.813)%22%20word-spacing%3D%220%22%3E%3Ctspan%20x%3D%220%22%3EQE%3C%2Ftspan%3E%3C%2Ftext%3E%3C%2Fsvg%3E"
    theme:
      light:
        primaryColor: "#2A61A7"
        headerColor1: "rgb(216, 98, 208)"
        headerColor2: "rgb(216, 164, 98)"
        navigationIndicatorColor: "rgb(98, 216, 105)"
      dark:
        primaryColor: '#DC6ED9'
        headerColor1: 'rgb(190, 122, 45)'
        headerColor2: 'rgb(45, 190, 50)'
        navigationIndicatorColor: 'rgb(45, 113, 190)'
backend:
  baseUrl: ${RHDH_BASE_URL}
  cors:
    origin: ${RHDH_BASE_URL}
  reading:
    allow:
      - host: 'github.com'
      - host: ${DH_TARGET_URL}
  auth:
    dangerouslyDisableDefaultAuthPolicy: true
    externalAccess:
      - type: static
        options:
          token: test-token
          subject: test-subject
    keys:
      - secret: temp
  cache:
    store: redis
    connection: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@redis:6379
    # redis sets are no longer supported from 1.5
    # useRedisSets: true
integrations:
  # Plugin: GitHub
  github:
    - host: github.com
      apps:
        - appId: ${GITHUB_APP_APP_ID}
          clientId: ${GITHUB_APP_CLIENT_ID}
          clientSecret: ${GITHUB_APP_CLIENT_SECRET}
          webhookUrl: ${GITHUB_APP_WEBHOOK_URL}
          webhookSecret: ${GITHUB_APP_WEBHOOK_SECRET}
          privateKey: |
            ${GITHUB_APP_PRIVATE_KEY}
        - appId: ${GITHUB_APP_JANUS_TEST_APP_ID}
          clientId: ${GITHUB_APP_JANUS_TEST_CLIENT_ID}
          clientSecret: ${GITHUB_APP_JANUS_TEST_CLIENT_SECRET}
          webhookUrl: ${GITHUB_APP_WEBHOOK_URL}
          webhookSecret: ${GITHUB_APP_WEBHOOK_SECRET}
          privateKey: |
            ${GITHUB_APP_JANUS_TEST_PRIVATE_KEY}
  bitbucketServer:
    - host: bitbucket.com
      apiBaseUrl: temp
      username: temp
      password: temp
  gitlab:
    - host: gitlab.com
      token: ${GITLAB_TOKEN}
auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  session:
    secret: superSecretSecret
  providers:
    guest:
      dangerouslyAllowOutsideDevelopment: true
    google:
      development:
        clientId: ${GOOGLE_CLIENT_ID}
        clientSecret: ${GOOGLE_CLIENT_SECRET}
    github:
      development:
        clientSecret: ${GITHUB_OAUTH_APP_SECRET}
        clientId: ${GITHUB_OAUTH_APP_ID}
        callbackUrl: ${RHDH_BASE_URL}/api/auth/github/handler/frame
    oidc:
      development:
        metadataUrl: ${KEYCLOAK_AUTH_BASE_URL}/auth/realms/${KEYCLOAK_AUTH_REALM}
        clientId: ${KEYCLOAK_AUTH_CLIENTID}
        clientSecret: ${KEYCLOAK_AUTH_CLIENT_SECRET}
        prompt: auto
        callbackUrl: ${RHDH_BASE_URL}/api/auth/oidc/handler/frame
        signIn:
          resolvers:
            - resolver: emailLocalPartMatchingUserEntityName
signInPage: oidc
techRadar:
  url: "http://${DH_TARGET_URL}/tech-radar"
techdocs:
  cache:
    ttl: 3600000 # 1 hour, required for Redis cache tests to be stable
proxy:
  skipInvalidProxies: true
  # endpoints: {}
  endpoints:
    # Other Proxies
    '/acr/api':
      target: 'https://rhdhqetest.azurecr.io/acr/v1/'
      changeOrigin: true
      headers:
        # If you use Bearer Token for authorization, please replace the 'Basic' with 'Bearer' in the following line.
        Authorization: '${ACR_SECRET}'
      # Change to "false" in case of using self hosted artifactory instance with a self-signed certificate
      secure: false
    '/quay/api':
      target: https://quay.io/
      headers:
        X-Requested-With: 'XMLHttpRequest'
      changeOrigin: true
      secure: true
    '/add-test-header':
      target: ${RHDH_BASE_URL_HTTP}/api/simple-chat
      credentials: forward
      headers:
        'x-proxy-test-header': 'hello!'
catalog:
  import:
    entityFilename: catalog-info.yaml
    # pullRequestBranchName: rhdh-integration
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [API, Component, Group, Location, Resource, System, Template]
  locations:
    - type: url
      target: https://github.com/redhat-developer/rhdh/blob/main/catalog-entities/all.yaml
    - type: url
      target: https://github.com/redhat-developer/red-hat-developer-hub-software-templates/blob/main/templates.yaml
    - type: url
      target: https://github.com/backstage/community-plugins/blob/main/workspaces/scaffolder-backend-module-kubernetes/plugins/kubernetes-actions/examples/templates/01-kubernetes-template.yaml
    - type: url
      target: https://github.com/backstage/community-plugins/blob/main/workspaces/quay/plugins/quay-actions/examples/templates/01-quay-template.yaml
    - type: url
      target: https://github.com/janus-qe/acr-catalog/blob/main/catalog-info.yaml
    - type: url
      target: https://github.com/janus-qe/rhdh-test/blob/main/user.yml
      rules:
        - allow: [User]
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
      rules:
        - allow: [User, Group]
  providers:
    keycloakOrg:
      default:
        baseUrl: ${KEYCLOAK_AUTH_BASE_URL}/auth
        loginRealm: ${KEYCLOAK_AUTH_LOGIN_REALM}
        realm: ${KEYCLOAK_AUTH_REALM}
        clientId: ${KEYCLOAK_AUTH_CLIENTID}
        clientSecret: ${KEYCLOAK_AUTH_CLIENT_SECRET}
        schedule:
          frequency: { minutes: 1 }
          timeout: { minutes: 1 }
      badConfigForMetrics:
        baseUrl: ${KEYCLOAK_AUTH_BASE_URL}/auth
        loginRealm: ${KEYCLOAK_AUTH_LOGIN_REALM}
        realm: ${KEYCLOAK_AUTH_REALM}
        clientId: ${KEYCLOAK_AUTH_CLIENTID}
        # Intentionally incorrect client secret for test purposes.
        clientSecret: ABC
        schedule:
          # Let's perform a single execution to trigger the metrics fetch failure counter; next fetch will never happen again.
          frequency: { minutes: 10000 }
          timeout: { minutes: 1 }
          initialDelay: { seconds: 15 }
    github:
      providerId:
        organization: '${GITHUB_ORG}'
        schedule:
          frequency: { minutes: 30}
          timeout: { minutes: 30}
    githubOrg:
      id: production
      githubUrl: "${GITHUB_URL}"
      orgs: ["${GITHUB_ORG}", "${GITHUB_ORG_2}"]
    gitlab:
      my-test-provider:
        group: rhdhqetest
        host: gitlab.com
        schedule:
          frequency:
            minutes: 1
          initialDelay:
            seconds: 15
          timeout:
            minutes: 1
dynatrace:
  baseUrl: temp
argocd:
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: argoInstance1
          url: temp
          token: temp
        - name: argoInstance2
          url: temp
          token: temp
permission:
  enabled: false
# Marketplace plugin configuration
extensions:
  installation:
    enabled: false
buildInfo:
  title: 'RHDH Build info'
  card:
    TechDocs builder: 'local'
    Authentication provider: 'Github'
    RBAC: disabled
  full: true
