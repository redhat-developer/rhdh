diff --git a/dist/scanner/plugin-scanner.cjs.js b/dist/scanner/plugin-scanner.cjs.js
index 9370a55d3afbf2b08ac0a8eec788b372f143b0a7..736758de887a814b859755523312a3974549f7ce 100644
--- a/dist/scanner/plugin-scanner.cjs.js
+++ b/dist/scanner/plugin-scanner.cjs.js
@@ -208,7 +208,7 @@ Please add '${backstageNodeModules}' to the 'NODE_PATH' when running the backsta
         let ready = false;
         this.rootDirectoryWatcher = chokidar__namespace.watch(this._rootDirectory, {
           ignoreInitial: true,
-          followSymlinks: true,
+          followSymlinks: false,
           depth: 1,
           disableGlobbing: true
         }).on(
diff --git a/dist/scanner/plugin-scanner.cjs.js.map b/dist/scanner/plugin-scanner.cjs.js.map
index 045261b5abb4677a3e80beecafef3b123239ce5d..3b06d68b078ecedc528262e47b173724e3242b2c 100644
--- a/dist/scanner/plugin-scanner.cjs.js.map
+++ b/dist/scanner/plugin-scanner.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"plugin-scanner.cjs.js","sources":["../../src/scanner/plugin-scanner.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Config } from '@backstage/config';\nimport { ScannedPluginPackage, ScannedPluginManifest } from './types';\nimport * as fs from 'fs/promises';\nimport { Stats, lstatSync, existsSync } from 'fs';\nimport * as chokidar from 'chokidar';\nimport * as path from 'path';\nimport * as url from 'url';\nimport debounce from 'lodash/debounce';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { ForwardedError } from '@backstage/errors';\n\nexport interface DynamicPluginScannerOptions {\n  config: Config;\n  backstageRoot: string;\n  logger: LoggerService;\n  preferAlpha?: boolean;\n}\n\nexport interface ScanRootResponse {\n  packages: ScannedPluginPackage[];\n}\n\nexport const configKey = 'dynamicPlugins';\n\nexport class PluginScanner {\n  private _rootDirectory?: string;\n  private configUnsubscribe?: () => void;\n  private rootDirectoryWatcher?: chokidar.FSWatcher;\n  private subscribers: (() => void)[] = [];\n\n  private constructor(\n    private readonly config: Config,\n    private readonly logger: LoggerService,\n    private readonly backstageRoot: string,\n    private readonly preferAlpha: boolean,\n  ) {}\n\n  static create(options: DynamicPluginScannerOptions): PluginScanner {\n    const scanner = new PluginScanner(\n      options.config,\n      options.logger,\n      options.backstageRoot,\n      options.preferAlpha || false,\n    );\n    scanner.applyConfig();\n    return scanner;\n  }\n\n  subscribeToRootDirectoryChange(subscriber: () => void) {\n    this.subscribers.push(subscriber);\n  }\n\n  get rootDirectory(): string | undefined {\n    return this._rootDirectory;\n  }\n\n  private applyConfig(): void | never {\n    const dynamicPlugins = this.config.getOptional(configKey);\n    if (!dynamicPlugins) {\n      this.logger.info(`'${configKey}' config entry not found.`);\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins !== 'object') {\n      this.logger.warn(`'${configKey}' config entry should be an object.`);\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (!('rootDirectory' in dynamicPlugins)) {\n      this.logger.warn(\n        `'${configKey}' config entry does not contain the 'rootDirectory' field.`,\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins.rootDirectory !== 'string') {\n      this.logger.warn(\n        `'${configKey}.rootDirectory' config entry should be a string.`,\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n\n    const dynamicPluginsRootPath = path.isAbsolute(dynamicPlugins.rootDirectory)\n      ? path.resolve(dynamicPlugins.rootDirectory)\n      : path.resolve(this.backstageRoot, dynamicPlugins.rootDirectory);\n\n    if (\n      !path\n        .dirname(dynamicPluginsRootPath)\n        .startsWith(path.resolve(this.backstageRoot))\n    ) {\n      const nodePath = process.env.NODE_PATH;\n      const backstageNodeModules = path.resolve(\n        this.backstageRoot,\n        'node_modules',\n      );\n      if (\n        !nodePath ||\n        !nodePath.split(path.delimiter).includes(backstageNodeModules)\n      ) {\n        throw new Error(\n          `Dynamic plugins under '${dynamicPluginsRootPath}' cannot access backstage modules in '${backstageNodeModules}'.\\n` +\n            `Please add '${backstageNodeModules}' to the 'NODE_PATH' when running the backstage backend.`,\n        );\n      }\n    }\n    if (!lstatSync(dynamicPluginsRootPath).isDirectory()) {\n      throw new Error('Not a directory');\n    }\n\n    this._rootDirectory = dynamicPluginsRootPath;\n  }\n\n  async scanRoot(): Promise<ScanRootResponse> {\n    if (!this._rootDirectory) {\n      return { packages: [] };\n    }\n\n    const dynamicPluginsLocation = this._rootDirectory;\n    const scannedPlugins: ScannedPluginPackage[] = [];\n    for (const dirEnt of await fs.readdir(dynamicPluginsLocation, {\n      withFileTypes: true,\n    })) {\n      const pluginDir = dirEnt;\n\n      if (pluginDir.name === 'lost+found') {\n        this.logger.debug(`skipping '${pluginDir.name}' system directory`);\n        continue;\n      }\n      const pluginHome = path.normalize(\n        path.resolve(dynamicPluginsLocation, pluginDir.name),\n      );\n      if (dirEnt.isSymbolicLink()) {\n        if (!(await fs.lstat(await fs.readlink(pluginHome))).isDirectory()) {\n          this.logger.info(\n            `skipping '${pluginHome}' since it is not a directory`,\n          );\n          continue;\n        }\n      } else if (!dirEnt.isDirectory()) {\n        this.logger.info(\n          `skipping '${pluginHome}' since it is not a directory`,\n        );\n        continue;\n      }\n\n      let scannedPlugin: ScannedPluginPackage;\n      try {\n        scannedPlugin = await this.scanDir(pluginHome);\n        if (!scannedPlugin.manifest.main) {\n          throw new Error(\"field 'main' not found in 'package.json'\");\n        }\n        if (!scannedPlugin.manifest.backstage?.role) {\n          throw new Error(\"field 'backstage.role' not found in 'package.json'\");\n        }\n      } catch (e) {\n        if (e instanceof ForwardedError) {\n          this.logger.error(e.message, e.cause);\n        } else {\n          this.logger.error(\n            `failed to load dynamic plugin manifest from '${pluginHome}'`,\n            e,\n          );\n        }\n        continue;\n      }\n      scannedPlugins.push(scannedPlugin);\n    }\n    return { packages: scannedPlugins };\n  }\n\n  private async scanDir(pluginHome: string): Promise<ScannedPluginPackage> {\n    const manifestFile = path.resolve(pluginHome, 'package.json');\n    const content = await fs.readFile(manifestFile);\n    const manifest: ScannedPluginManifest = JSON.parse(content.toString());\n    const scannedPluginPackage: ScannedPluginPackage = {\n      location: url.pathToFileURL(pluginHome),\n      manifest: manifest,\n    };\n\n    if (this.preferAlpha) {\n      const pluginHomeAlpha = path.resolve(pluginHome, 'alpha');\n      if (existsSync(pluginHomeAlpha)) {\n        if ((await fs.lstat(pluginHomeAlpha)).isDirectory()) {\n          try {\n            const alphaContent = await fs.readFile(\n              path.resolve(pluginHomeAlpha, 'package.json'),\n            );\n            scannedPluginPackage.alphaManifest = JSON.parse(\n              alphaContent.toString(),\n            );\n          } catch (e) {\n            throw new ForwardedError(\n              `failed to load dynamic plugin manifest from '${pluginHome}/alpha'`,\n              e,\n            );\n          }\n        } else {\n          this.logger.warn(\n            `skipping '${pluginHomeAlpha}' since it is not a directory`,\n          );\n        }\n      }\n    }\n\n    return scannedPluginPackage;\n  }\n\n  async trackChanges(): Promise<void> {\n    const setupRootDirectoryWatcher = async (): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        if (!this._rootDirectory) {\n          resolve();\n          return;\n        }\n        const callSubscribers = debounce(() => {\n          this.subscribers.forEach(s => s());\n        }, 500);\n        let ready = false;\n        this.rootDirectoryWatcher = chokidar\n          .watch(this._rootDirectory, {\n            ignoreInitial: true,\n            followSymlinks: true,\n            depth: 1,\n            disableGlobbing: true,\n          })\n          .on(\n            'all',\n            (\n              event: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\n              eventPath: string,\n              _: Stats | undefined,\n            ): void => {\n              if (\n                (['addDir', 'unlinkDir'].includes(event) &&\n                  path.dirname(eventPath) === this._rootDirectory) ||\n                (['add', 'unlink', 'change'].includes(event) &&\n                  path.dirname(path.dirname(eventPath)) ===\n                    this._rootDirectory &&\n                  path.basename(eventPath) === 'package.json')\n              ) {\n                this.logger.info(\n                  `rootDirectory changed (${event} - ${eventPath}): scanning plugins again`,\n                );\n                callSubscribers();\n              } else {\n                this.logger.debug(\n                  `rootDirectory changed (${event} - ${eventPath}): no need to scan plugins again`,\n                );\n              }\n            },\n          )\n          .on('error', (error: Error) => {\n            this.logger.error(\n              `error while watching '${this.rootDirectory}'`,\n              error,\n            );\n            if (!ready) {\n              reject(error);\n            }\n          })\n          .on('ready', () => {\n            ready = true;\n            resolve();\n          });\n      });\n    };\n\n    await setupRootDirectoryWatcher();\n    if (this.config.subscribe) {\n      const { unsubscribe } = this.config.subscribe(async (): Promise<void> => {\n        const oldRootDirectory = this._rootDirectory;\n        try {\n          this.applyConfig();\n        } catch (e) {\n          this.logger.error(\n            'failed to apply new config for dynamic plugins',\n            e,\n          );\n        }\n        if (oldRootDirectory !== this._rootDirectory) {\n          this.logger.info(\n            `rootDirectory changed in Config from '${oldRootDirectory}' to '${this._rootDirectory}'`,\n          );\n          this.subscribers.forEach(s => s());\n          if (this.rootDirectoryWatcher) {\n            await this.rootDirectoryWatcher.close();\n          }\n          await setupRootDirectoryWatcher();\n        }\n      });\n      this.configUnsubscribe = unsubscribe;\n    }\n  }\n\n  async untrackChanges() {\n    if (this.rootDirectoryWatcher) {\n      this.rootDirectoryWatcher.close();\n    }\n    if (this.configUnsubscribe) {\n      this.configUnsubscribe();\n    }\n  }\n\n  destructor() {\n    this.untrackChanges();\n  }\n}\n"],"names":["path","lstatSync","fs","ForwardedError","url","existsSync","debounce","chokidar"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"plugin-scanner.cjs.js","sources":["../../src/scanner/plugin-scanner.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Config } from '@backstage/config';\nimport { ScannedPluginPackage, ScannedPluginManifest } from './types';\nimport * as fs from 'fs/promises';\nimport { Stats, lstatSync, existsSync } from 'fs';\nimport * as chokidar from 'chokidar';\nimport * as path from 'path';\nimport * as url from 'url';\nimport debounce from 'lodash/debounce';\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { ForwardedError } from '@backstage/errors';\n\nexport interface DynamicPluginScannerOptions {\n  config: Config;\n  backstageRoot: string;\n  logger: LoggerService;\n  preferAlpha?: boolean;\n}\n\nexport interface ScanRootResponse {\n  packages: ScannedPluginPackage[];\n}\n\nexport const configKey = 'dynamicPlugins';\n\nexport class PluginScanner {\n  private _rootDirectory?: string;\n  private configUnsubscribe?: () => void;\n  private rootDirectoryWatcher?: chokidar.FSWatcher;\n  private subscribers: (() => void)[] = [];\n\n  private constructor(\n    private readonly config: Config,\n    private readonly logger: LoggerService,\n    private readonly backstageRoot: string,\n    private readonly preferAlpha: boolean,\n  ) {}\n\n  static create(options: DynamicPluginScannerOptions): PluginScanner {\n    const scanner = new PluginScanner(\n      options.config,\n      options.logger,\n      options.backstageRoot,\n      options.preferAlpha || false,\n    );\n    scanner.applyConfig();\n    return scanner;\n  }\n\n  subscribeToRootDirectoryChange(subscriber: () => void) {\n    this.subscribers.push(subscriber);\n  }\n\n  get rootDirectory(): string | undefined {\n    return this._rootDirectory;\n  }\n\n  private applyConfig(): void | never {\n    const dynamicPlugins = this.config.getOptional(configKey);\n    if (!dynamicPlugins) {\n      this.logger.info(`'${configKey}' config entry not found.`);\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins !== 'object') {\n      this.logger.warn(`'${configKey}' config entry should be an object.`);\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (!('rootDirectory' in dynamicPlugins)) {\n      this.logger.warn(\n        `'${configKey}' config entry does not contain the 'rootDirectory' field.`,\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n    if (typeof dynamicPlugins.rootDirectory !== 'string') {\n      this.logger.warn(\n        `'${configKey}.rootDirectory' config entry should be a string.`,\n      );\n      this._rootDirectory = undefined;\n      return;\n    }\n\n    const dynamicPluginsRootPath = path.isAbsolute(dynamicPlugins.rootDirectory)\n      ? path.resolve(dynamicPlugins.rootDirectory)\n      : path.resolve(this.backstageRoot, dynamicPlugins.rootDirectory);\n\n    if (\n      !path\n        .dirname(dynamicPluginsRootPath)\n        .startsWith(path.resolve(this.backstageRoot))\n    ) {\n      const nodePath = process.env.NODE_PATH;\n      const backstageNodeModules = path.resolve(\n        this.backstageRoot,\n        'node_modules',\n      );\n      if (\n        !nodePath ||\n        !nodePath.split(path.delimiter).includes(backstageNodeModules)\n      ) {\n        throw new Error(\n          `Dynamic plugins under '${dynamicPluginsRootPath}' cannot access backstage modules in '${backstageNodeModules}'.\\n` +\n            `Please add '${backstageNodeModules}' to the 'NODE_PATH' when running the backstage backend.`,\n        );\n      }\n    }\n    if (!lstatSync(dynamicPluginsRootPath).isDirectory()) {\n      throw new Error('Not a directory');\n    }\n\n    this._rootDirectory = dynamicPluginsRootPath;\n  }\n\n  async scanRoot(): Promise<ScanRootResponse> {\n    if (!this._rootDirectory) {\n      return { packages: [] };\n    }\n\n    const dynamicPluginsLocation = this._rootDirectory;\n    const scannedPlugins: ScannedPluginPackage[] = [];\n    for (const dirEnt of await fs.readdir(dynamicPluginsLocation, {\n      withFileTypes: true,\n    })) {\n      const pluginDir = dirEnt;\n\n      if (pluginDir.name === 'lost+found') {\n        this.logger.debug(`skipping '${pluginDir.name}' system directory`);\n        continue;\n      }\n      const pluginHome = path.normalize(\n        path.resolve(dynamicPluginsLocation, pluginDir.name),\n      );\n      if (dirEnt.isSymbolicLink()) {\n        if (!(await fs.lstat(await fs.readlink(pluginHome))).isDirectory()) {\n          this.logger.info(\n            `skipping '${pluginHome}' since it is not a directory`,\n          );\n          continue;\n        }\n      } else if (!dirEnt.isDirectory()) {\n        this.logger.info(\n          `skipping '${pluginHome}' since it is not a directory`,\n        );\n        continue;\n      }\n\n      let scannedPlugin: ScannedPluginPackage;\n      try {\n        scannedPlugin = await this.scanDir(pluginHome);\n        if (!scannedPlugin.manifest.main) {\n          throw new Error(\"field 'main' not found in 'package.json'\");\n        }\n        if (!scannedPlugin.manifest.backstage?.role) {\n          throw new Error(\"field 'backstage.role' not found in 'package.json'\");\n        }\n      } catch (e) {\n        if (e instanceof ForwardedError) {\n          this.logger.error(e.message, e.cause);\n        } else {\n          this.logger.error(\n            `failed to load dynamic plugin manifest from '${pluginHome}'`,\n            e,\n          );\n        }\n        continue;\n      }\n      scannedPlugins.push(scannedPlugin);\n    }\n    return { packages: scannedPlugins };\n  }\n\n  private async scanDir(pluginHome: string): Promise<ScannedPluginPackage> {\n    const manifestFile = path.resolve(pluginHome, 'package.json');\n    const content = await fs.readFile(manifestFile);\n    const manifest: ScannedPluginManifest = JSON.parse(content.toString());\n    const scannedPluginPackage: ScannedPluginPackage = {\n      location: url.pathToFileURL(pluginHome),\n      manifest: manifest,\n    };\n\n    if (this.preferAlpha) {\n      const pluginHomeAlpha = path.resolve(pluginHome, 'alpha');\n      if (existsSync(pluginHomeAlpha)) {\n        if ((await fs.lstat(pluginHomeAlpha)).isDirectory()) {\n          try {\n            const alphaContent = await fs.readFile(\n              path.resolve(pluginHomeAlpha, 'package.json'),\n            );\n            scannedPluginPackage.alphaManifest = JSON.parse(\n              alphaContent.toString(),\n            );\n          } catch (e) {\n            throw new ForwardedError(\n              `failed to load dynamic plugin manifest from '${pluginHome}/alpha'`,\n              e,\n            );\n          }\n        } else {\n          this.logger.warn(\n            `skipping '${pluginHomeAlpha}' since it is not a directory`,\n          );\n        }\n      }\n    }\n\n    return scannedPluginPackage;\n  }\n\n  async trackChanges(): Promise<void> {\n    const setupRootDirectoryWatcher = async (): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        if (!this._rootDirectory) {\n          resolve();\n          return;\n        }\n        const callSubscribers = debounce(() => {\n          this.subscribers.forEach(s => s());\n        }, 500);\n        let ready = false;\n        this.rootDirectoryWatcher = chokidar\n          .watch(this._rootDirectory, {\n            ignoreInitial: true,\n            followSymlinks: false,\n            depth: 1,\n            disableGlobbing: true,\n          })\n          .on(\n            'all',\n            (\n              event: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir',\n              eventPath: string,\n              _: Stats | undefined,\n            ): void => {\n              if (\n                (['addDir', 'unlinkDir'].includes(event) &&\n                  path.dirname(eventPath) === this._rootDirectory) ||\n                (['add', 'unlink', 'change'].includes(event) &&\n                  path.dirname(path.dirname(eventPath)) ===\n                    this._rootDirectory &&\n                  path.basename(eventPath) === 'package.json')\n              ) {\n                this.logger.info(\n                  `rootDirectory changed (${event} - ${eventPath}): scanning plugins again`,\n                );\n                callSubscribers();\n              } else {\n                this.logger.debug(\n                  `rootDirectory changed (${event} - ${eventPath}): no need to scan plugins again`,\n                );\n              }\n            },\n          )\n          .on('error', (error: Error) => {\n            this.logger.error(\n              `error while watching '${this.rootDirectory}'`,\n              error,\n            );\n            if (!ready) {\n              reject(error);\n            }\n          })\n          .on('ready', () => {\n            ready = true;\n            resolve();\n          });\n      });\n    };\n\n    await setupRootDirectoryWatcher();\n    if (this.config.subscribe) {\n      const { unsubscribe } = this.config.subscribe(async (): Promise<void> => {\n        const oldRootDirectory = this._rootDirectory;\n        try {\n          this.applyConfig();\n        } catch (e) {\n          this.logger.error(\n            'failed to apply new config for dynamic plugins',\n            e,\n          );\n        }\n        if (oldRootDirectory !== this._rootDirectory) {\n          this.logger.info(\n            `rootDirectory changed in Config from '${oldRootDirectory}' to '${this._rootDirectory}'`,\n          );\n          this.subscribers.forEach(s => s());\n          if (this.rootDirectoryWatcher) {\n            await this.rootDirectoryWatcher.close();\n          }\n          await setupRootDirectoryWatcher();\n        }\n      });\n      this.configUnsubscribe = unsubscribe;\n    }\n  }\n\n  async untrackChanges() {\n    if (this.rootDirectoryWatcher) {\n      this.rootDirectoryWatcher.close();\n    }\n    if (this.configUnsubscribe) {\n      this.configUnsubscribe();\n    }\n  }\n\n  destructor() {\n    this.untrackChanges();\n  }\n}\n"],"names":["path","lstatSync","fs","ForwardedError","url","existsSync","debounce","chokidar"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/server/frontendRemotesServer.cjs.js b/dist/server/frontendRemotesServer.cjs.js
index b047f96aa23b39b6ebd723b1eddfad59ff619c10..4a6ad865b8adcca717c2d3663dbc967fb25f0dd9 100644
--- a/dist/server/frontendRemotesServer.cjs.js
+++ b/dist/server/frontendRemotesServer.cjs.js
@@ -2,7 +2,7 @@
 
 var backendPluginApi = require('@backstage/backend-plugin-api');
 var router$1 = require('./router.cjs.js');
-var backendDynamicFeatureService = require('@backstage/backend-dynamic-feature-service');
+var pluginManager = require('../manager/plugin-manager.cjs.js');
 var router = require('../schema/openapi/generated/router.cjs.js');
 var sdk = require('@module-federation/sdk');
 
@@ -16,7 +16,7 @@ const frontendRemotesServerService = backendPluginApi.createServiceFactory({
     logger: backendPluginApi.coreServices.rootLogger,
     rootHttpRouter: backendPluginApi.coreServices.rootHttpRouter,
     config: backendPluginApi.coreServices.rootConfig,
-    dynamicPlugins: backendDynamicFeatureService.dynamicPluginsServiceRef,
+    dynamicPlugins: pluginManager.dynamicPluginsServiceRef,
     lifecycle: backendPluginApi.coreServices.rootLifecycle
   },
   async factory({ logger, rootHttpRouter, config, dynamicPlugins, lifecycle }) {
diff --git a/dist/server/frontendRemotesServer.cjs.js.map b/dist/server/frontendRemotesServer.cjs.js.map
index f8dafdd416443310860499f70ec758c63af70ade..1e8b9e99cf3d7d684030638c8acb005f15f2ddc8 100644
--- a/dist/server/frontendRemotesServer.cjs.js.map
+++ b/dist/server/frontendRemotesServer.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"frontendRemotesServer.cjs.js","sources":["../../src/server/frontendRemotesServer.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\nimport { createRouter } from './router';\nimport { dynamicPluginsServiceRef } from '@backstage/backend-dynamic-feature-service';\nimport { spec } from '../schema/openapi';\nimport { ManifestFileName } from '@module-federation/sdk';\nimport { RemoteInfo } from '../schema/openapi/generated/models';\nimport { JsonObject } from '@backstage/types';\n\n/**\n *\n * @public\n * */\nexport type AdditionalRemoteInfo = Omit<RemoteInfo, 'name' | 'entry'>;\n\n/**\n *\n * @public\n * */\nexport type FrontendRemoteResolver = {\n  /**\n   * Relative path to the module federation assets folder from the root folder of the plugin package.\n   * Default value is `dist`.\n   */\n  assetsPathFromPackage?: string;\n\n  /**\n   * File name of the module federation manifest inside the module federation assets folder.\n   * Default value is `mf-manifest.json`.\n   */\n  manifestFileName?: string;\n\n  /**\n   * Type of the remote entry returned in the RemoteInfo for this remote.\n   * Default value is `manifest`.\n   */\n  getRemoteEntryType?: (\n    manifestContent: JsonObject,\n  ) => 'manifest' | 'javascript';\n\n  /**\n   * Additional module federation fields, which might be required if the remote entry type is 'javascript'.\n   */\n  getAdditionalRemoteInfo?: (\n    manifestContent: JsonObject,\n  ) => AdditionalRemoteInfo;\n\n  /**\n   * Additional module federation fields, which might be required if the remote entry type is 'javascript'.\n   * @deprecated Use `getAdditionalRemoteInfo` instead.\n   */\n  getAdditionaRemoteInfo?: (\n    manifestContent: JsonObject,\n  ) => AdditionalRemoteInfo;\n\n  /**\n   * Overrides the list of exposed modules. By default the exposed modules are read from the manifest file.\n   */\n  overrideExposedModules?: (\n    exposedModules: string[],\n    manifestContent: JsonObject,\n  ) => string[];\n\n  /**\n   * Customizes the manifest before returning it as the remote entry.\n   */\n  customizeManifest?: (content: JsonObject) => JsonObject;\n};\n\n/**\n *\n * @public\n * */\nexport type FrontendRemoteResolverProvider = {\n  for(\n    pluginName: string,\n    pluginPackagePath: string,\n  ): Partial<FrontendRemoteResolver> | undefined;\n};\n\n/**\n *\n * @public\n * */\nexport interface DynamicPluginsFrontendRemotesService {\n  setResolverProvider(provider: FrontendRemoteResolverProvider): void;\n}\n\n/**\n * A service that serves the frontend module federation remotes,\n * and allows a plugin to customize the way remotes are served,\n * by setting a ResolverProvider.\n *\n * @public\n */\nexport const dynamicPluginsFrontendServiceRef =\n  createServiceRef<DynamicPluginsFrontendRemotesService>({\n    id: 'core.dynamicplugins.frontendRemotes',\n    scope: 'root',\n  });\n\nexport type FrontendRemoteResolvers = {\n  default: FrontendRemoteResolver &\n    Required<\n      Pick<\n        FrontendRemoteResolver,\n        'assetsPathFromPackage' | 'manifestFileName' | 'getRemoteEntryType'\n      >\n    >;\n  provider?: FrontendRemoteResolverProvider;\n};\n\nexport const frontendRemotesServerService = createServiceFactory({\n  service: dynamicPluginsFrontendServiceRef,\n  deps: {\n    logger: coreServices.rootLogger,\n    rootHttpRouter: coreServices.rootHttpRouter,\n    config: coreServices.rootConfig,\n    dynamicPlugins: dynamicPluginsServiceRef,\n    lifecycle: coreServices.rootLifecycle,\n  },\n  async factory({ logger, rootHttpRouter, config, dynamicPlugins, lifecycle }) {\n    const resolvers: FrontendRemoteResolvers = {\n      default: {\n        assetsPathFromPackage: 'dist',\n        manifestFileName: ManifestFileName,\n        getRemoteEntryType: () => 'manifest',\n      },\n      provider: undefined,\n    };\n\n    lifecycle.addStartupHook(async () => {\n      rootHttpRouter.use(\n        `/${spec.info.title}`,\n        await createRouter({\n          logger,\n          config,\n          dynamicPlugins,\n          resolvers,\n        }),\n      );\n    });\n\n    return {\n      setResolverProvider(resolver) {\n        logger.info('Setting resolver provider');\n        if (resolvers.provider) {\n          throw new Error(\n            'Attempted to install a frontend remote resolver provider twice',\n          );\n        }\n        resolvers.provider = resolver;\n      },\n    };\n  },\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices","dynamicPluginsServiceRef","ManifestFileName","spec","createRouter"],"mappings":";;;;;;;;AAiHO,MAAM,mCACXA,iCAAuD,CAAA;AAAA,EACrD,EAAI,EAAA,qCAAA;AAAA,EACJ,KAAO,EAAA;AACT,CAAC;AAaI,MAAM,+BAA+BC,qCAAqB,CAAA;AAAA,EAC/D,OAAS,EAAA,gCAAA;AAAA,EACT,IAAM,EAAA;AAAA,IACJ,QAAQC,6BAAa,CAAA,UAAA;AAAA,IACrB,gBAAgBA,6BAAa,CAAA,cAAA;AAAA,IAC7B,QAAQA,6BAAa,CAAA,UAAA;AAAA,IACrB,cAAgB,EAAAC,qDAAA;AAAA,IAChB,WAAWD,6BAAa,CAAA;AAAA,GAC1B;AAAA,EACA,MAAM,QAAQ,EAAE,MAAA,EAAQ,gBAAgB,MAAQ,EAAA,cAAA,EAAgB,WAAa,EAAA;AAC3E,IAAA,MAAM,SAAqC,GAAA;AAAA,MACzC,OAAS,EAAA;AAAA,QACP,qBAAuB,EAAA,MAAA;AAAA,QACvB,gBAAkB,EAAAE,oBAAA;AAAA,QAClB,oBAAoB,MAAM;AAAA,OAC5B;AAAA,MACA,QAAU,EAAA,KAAA;AAAA,KACZ;AAEA,IAAA,SAAA,CAAU,eAAe,YAAY;AACnC,MAAe,cAAA,CAAA,GAAA;AAAA,QACb,CAAA,CAAA,EAAIC,WAAK,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AAAA,QACnB,MAAMC,qBAAa,CAAA;AAAA,UACjB,MAAA;AAAA,UACA,MAAA;AAAA,UACA,cAAA;AAAA,UACA;AAAA,SACD;AAAA,OACH;AAAA,KACD,CAAA;AAED,IAAO,OAAA;AAAA,MACL,oBAAoB,QAAU,EAAA;AAC5B,QAAA,MAAA,CAAO,KAAK,2BAA2B,CAAA;AACvC,QAAA,IAAI,UAAU,QAAU,EAAA;AACtB,UAAA,MAAM,IAAI,KAAA;AAAA,YACR;AAAA,WACF;AAAA;AAEF,QAAA,SAAA,CAAU,QAAW,GAAA,QAAA;AAAA;AACvB,KACF;AAAA;AAEJ,CAAC;;;;;"}
\ No newline at end of file
+{"version":3,"file":"frontendRemotesServer.cjs.js","sources":["../../src/server/frontendRemotesServer.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\nimport { createRouter } from './router';\nimport { dynamicPluginsServiceRef } from '../manager';\nimport { spec } from '../schema/openapi';\nimport { ManifestFileName } from '@module-federation/sdk';\nimport { RemoteInfo } from '../schema/openapi/generated/models';\nimport { JsonObject } from '@backstage/types';\n\n/**\n *\n * @public\n * */\nexport type AdditionalRemoteInfo = Omit<RemoteInfo, 'name' | 'entry'>;\n\n/**\n *\n * @public\n * */\nexport type FrontendRemoteResolver = {\n  /**\n   * Relative path to the module federation assets folder from the root folder of the plugin package.\n   * Default value is `dist`.\n   */\n  assetsPathFromPackage?: string;\n\n  /**\n   * File name of the module federation manifest inside the module federation assets folder.\n   * Default value is `mf-manifest.json`.\n   */\n  manifestFileName?: string;\n\n  /**\n   * Type of the remote entry returned in the RemoteInfo for this remote.\n   * Default value is `manifest`.\n   */\n  getRemoteEntryType?: (\n    manifestContent: JsonObject,\n  ) => 'manifest' | 'javascript';\n\n  /**\n   * Additional module federation fields, which might be required if the remote entry type is 'javascript'.\n   */\n  getAdditionalRemoteInfo?: (\n    manifestContent: JsonObject,\n  ) => AdditionalRemoteInfo;\n\n  /**\n   * Additional module federation fields, which might be required if the remote entry type is 'javascript'.\n   * @deprecated Use `getAdditionalRemoteInfo` instead.\n   */\n  getAdditionaRemoteInfo?: (\n    manifestContent: JsonObject,\n  ) => AdditionalRemoteInfo;\n\n  /**\n   * Overrides the list of exposed modules. By default the exposed modules are read from the manifest file.\n   */\n  overrideExposedModules?: (\n    exposedModules: string[],\n    manifestContent: JsonObject,\n  ) => string[];\n\n  /**\n   * Customizes the manifest before returning it as the remote entry.\n   */\n  customizeManifest?: (content: JsonObject) => JsonObject;\n};\n\n/**\n *\n * @public\n * */\nexport type FrontendRemoteResolverProvider = {\n  for(\n    pluginName: string,\n    pluginPackagePath: string,\n  ): Partial<FrontendRemoteResolver> | undefined;\n};\n\n/**\n *\n * @public\n * */\nexport interface DynamicPluginsFrontendRemotesService {\n  setResolverProvider(provider: FrontendRemoteResolverProvider): void;\n}\n\n/**\n * A service that serves the frontend module federation remotes,\n * and allows a plugin to customize the way remotes are served,\n * by setting a ResolverProvider.\n *\n * @public\n */\nexport const dynamicPluginsFrontendServiceRef =\n  createServiceRef<DynamicPluginsFrontendRemotesService>({\n    id: 'core.dynamicplugins.frontendRemotes',\n    scope: 'root',\n  });\n\nexport type FrontendRemoteResolvers = {\n  default: FrontendRemoteResolver &\n    Required<\n      Pick<\n        FrontendRemoteResolver,\n        'assetsPathFromPackage' | 'manifestFileName' | 'getRemoteEntryType'\n      >\n    >;\n  provider?: FrontendRemoteResolverProvider;\n};\n\nexport const frontendRemotesServerService = createServiceFactory({\n  service: dynamicPluginsFrontendServiceRef,\n  deps: {\n    logger: coreServices.rootLogger,\n    rootHttpRouter: coreServices.rootHttpRouter,\n    config: coreServices.rootConfig,\n    dynamicPlugins: dynamicPluginsServiceRef,\n    lifecycle: coreServices.rootLifecycle,\n  },\n  async factory({ logger, rootHttpRouter, config, dynamicPlugins, lifecycle }) {\n    const resolvers: FrontendRemoteResolvers = {\n      default: {\n        assetsPathFromPackage: 'dist',\n        manifestFileName: ManifestFileName,\n        getRemoteEntryType: () => 'manifest',\n      },\n      provider: undefined,\n    };\n\n    lifecycle.addStartupHook(async () => {\n      rootHttpRouter.use(\n        `/${spec.info.title}`,\n        await createRouter({\n          logger,\n          config,\n          dynamicPlugins,\n          resolvers,\n        }),\n      );\n    });\n\n    return {\n      setResolverProvider(resolver) {\n        logger.info('Setting resolver provider');\n        if (resolvers.provider) {\n          throw new Error(\n            'Attempted to install a frontend remote resolver provider twice',\n          );\n        }\n        resolvers.provider = resolver;\n      },\n    };\n  },\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices","dynamicPluginsServiceRef","ManifestFileName","spec","createRouter"],"mappings":";;;;;;;;AAiHO,MAAM,mCACXA,iCAAuD,CAAA;AAAA,EACrD,EAAI,EAAA,qCAAA;AAAA,EACJ,KAAO,EAAA;AACT,CAAC;AAaI,MAAM,+BAA+BC,qCAAqB,CAAA;AAAA,EAC/D,OAAS,EAAA,gCAAA;AAAA,EACT,IAAM,EAAA;AAAA,IACJ,QAAQC,6BAAa,CAAA,UAAA;AAAA,IACrB,gBAAgBA,6BAAa,CAAA,cAAA;AAAA,IAC7B,QAAQA,6BAAa,CAAA,UAAA;AAAA,IACrB,cAAgB,EAAAC,sCAAA;AAAA,IAChB,WAAWD,6BAAa,CAAA;AAAA,GAC1B;AAAA,EACA,MAAM,QAAQ,EAAE,MAAA,EAAQ,gBAAgB,MAAQ,EAAA,cAAA,EAAgB,WAAa,EAAA;AAC3E,IAAA,MAAM,SAAqC,GAAA;AAAA,MACzC,OAAS,EAAA;AAAA,QACP,qBAAuB,EAAA,MAAA;AAAA,QACvB,gBAAkB,EAAAE,oBAAA;AAAA,QAClB,oBAAoB,MAAM;AAAA,OAC5B;AAAA,MACA,QAAU,EAAA,KAAA;AAAA,KACZ;AAEA,IAAA,SAAA,CAAU,eAAe,YAAY;AACnC,MAAe,cAAA,CAAA,GAAA;AAAA,QACb,CAAA,CAAA,EAAIC,WAAK,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AAAA,QACnB,MAAMC,qBAAa,CAAA;AAAA,UACjB,MAAA;AAAA,UACA,MAAA;AAAA,UACA,cAAA;AAAA,UACA;AAAA,SACD;AAAA,OACH;AAAA,KACD,CAAA;AAED,IAAO,OAAA;AAAA,MACL,oBAAoB,QAAU,EAAA;AAC5B,QAAA,MAAA,CAAO,KAAK,2BAA2B,CAAA;AACvC,QAAA,IAAI,UAAU,QAAU,EAAA;AACtB,UAAA,MAAM,IAAI,KAAA;AAAA,YACR;AAAA,WACF;AAAA;AAEF,QAAA,SAAA,CAAU,QAAW,GAAA,QAAA;AAAA;AACvB,KACF;AAAA;AAEJ,CAAC;;;;;"}
\ No newline at end of file
diff --git a/dist/server/router.cjs.js.map b/dist/server/router.cjs.js.map
index 13debceeac332db88088eb038d27d082a10d4d01..83d9911842800b66ec994900332e6fbed0a0160a 100644
--- a/dist/server/router.cjs.js.map
+++ b/dist/server/router.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"router.cjs.js","sources":["../../src/server/router.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LoggerService,\n  RootConfigService,\n} from '@backstage/backend-plugin-api';\nimport express from 'express';\nimport { createOpenApiRouter, spec } from '../schema/openapi';\nimport { DynamicPluginProvider } from '@backstage/backend-dynamic-feature-service';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as url from 'url';\nimport { FrontendRemoteResolvers } from './frontendRemotesServer';\nimport { Remote } from '../schema/openapi/generated/models';\nimport { JsonObject } from '@backstage/types';\n\nexport async function createRouter({\n  logger,\n  config,\n  dynamicPlugins,\n  resolvers,\n}: {\n  logger: LoggerService;\n  config: RootConfigService;\n  dynamicPlugins: DynamicPluginProvider;\n  resolvers: FrontendRemoteResolvers;\n}): Promise<express.Router> {\n  const externalBaseUrl = `${config.getString('backend.baseUrl')}/${\n    spec.info.title\n  }`;\n\n  const typedRouter = await createOpenApiRouter();\n\n  const frontendPluginRemotes: Remote[] = [];\n\n  const { default: defaultResolver, provider: resolverProvider } = resolvers;\n  for (const plugin of dynamicPlugins.frontendPlugins()) {\n    try {\n      const pluginScannedPackage = dynamicPlugins.getScannedPackage(plugin);\n      const pluginScannedPackagePath = path.resolve(\n        url.fileURLToPath(pluginScannedPackage.location),\n      );\n      const providedResolver = resolverProvider?.for(\n        plugin.name,\n        pluginScannedPackagePath,\n      );\n\n      const assetsPath = path.resolve(\n        pluginScannedPackagePath,\n        providedResolver?.assetsPathFromPackage ??\n          defaultResolver.assetsPathFromPackage,\n      );\n\n      const manifestFileName =\n        providedResolver?.manifestFileName ?? defaultResolver.manifestFileName;\n      const manifestLocation = path.resolve(assetsPath, manifestFileName);\n      if (!fs.existsSync(manifestLocation)) {\n        logger.error(\n          `Could not find manifest '${manifestLocation}' for frontend plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      let manifest: JsonObject;\n      try {\n        manifest = JSON.parse(fs.readFileSync(manifestLocation).toString());\n      } catch (error) {\n        logger.error(\n          `Dynamic frontend plugin manifest '${manifestLocation}' could not be parsed for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      if (!manifest.name || typeof manifest.name !== 'string') {\n        logger.error(\n          `Error in manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}: module name not found`,\n        );\n        continue;\n      }\n      if (\n        !manifest.metaData ||\n        typeof manifest.metaData !== 'object' ||\n        !('remoteEntry' in manifest.metaData) ||\n        !manifest.metaData.remoteEntry ||\n        typeof manifest.metaData.remoteEntry !== 'object' ||\n        !('name' in manifest.metaData.remoteEntry) ||\n        typeof manifest.metaData.remoteEntry.name !== 'string'\n      ) {\n        logger.error(\n          `Could not find remote entry asset in the manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      if (\n        !manifest.exposes ||\n        !Array.isArray(manifest.exposes) ||\n        !manifest.exposes.every<{ name: string }>(\n          (i): i is { name: string } =>\n            i !== null && typeof i === 'object' && 'name' in i,\n        )\n      ) {\n        logger.error(\n          `Could not find the exposes field in the manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      const getAdditionalRemoteInfo =\n        providedResolver?.getAdditionalRemoteInfo ??\n        providedResolver?.getAdditionaRemoteInfo ??\n        defaultResolver.getAdditionalRemoteInfo ??\n        defaultResolver?.getAdditionaRemoteInfo;\n      const getRemoteEntryType =\n        providedResolver?.getRemoteEntryType ??\n        defaultResolver.getRemoteEntryType;\n      const remoteEntryType = getRemoteEntryType(manifest);\n\n      let remoteEntryAsset = manifestFileName;\n      if (remoteEntryType === 'javascript') {\n        remoteEntryAsset = manifest.metaData.remoteEntry.name;\n      }\n\n      const remoteEntryAssetLocation = path.resolve(\n        assetsPath,\n        remoteEntryAsset,\n      );\n      if (!fs.existsSync(remoteEntryAssetLocation)) {\n        logger.error(\n          `Could not find remote entry asset '${remoteEntryAssetLocation}' for frontend plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      const remoteAssetsPrefix = `/remotes/${plugin.name}`;\n      const remoteEntryPath = `${remoteAssetsPrefix}/${remoteEntryAsset}`;\n\n      const overrideExposedModules =\n        providedResolver?.overrideExposedModules ??\n        defaultResolver.overrideExposedModules;\n\n      const exposedModules = manifest.exposes.map(e => e.name);\n\n      frontendPluginRemotes.push({\n        packageName: plugin.name,\n        remoteInfo: {\n          name: manifest.name,\n          entry: `${externalBaseUrl}${remoteEntryPath}`,\n          ...getAdditionalRemoteInfo?.(manifest),\n        },\n        exposedModules:\n          overrideExposedModules?.(exposedModules, manifest) ?? exposedModules,\n      });\n\n      const customizeManifest =\n        providedResolver?.customizeManifest ??\n        defaultResolver.customizeManifest;\n      if (remoteEntryType === 'manifest' && customizeManifest) {\n        const customizedContent = customizeManifest(manifest);\n        typedRouter.use(`${remoteEntryPath}`, (_, res) => {\n          res.json(customizedContent);\n        });\n      }\n      typedRouter.use(remoteAssetsPrefix, express.static(assetsPath));\n      logger.info(\n        `Exposed dynamic frontend plugin '${plugin.name}' from '${assetsPath}' `,\n      );\n    } catch (error) {\n      logger.error(\n        `Unexpected error when exposing dynamic frontend plugin '${plugin.name}@${plugin.version}'`,\n        error,\n      );\n      continue;\n    }\n  }\n\n  logger.info(`/remotes => ${JSON.stringify(frontendPluginRemotes)}`);\n  typedRouter.get('/remotes', (_, res) => {\n    res.status(200).json(frontendPluginRemotes);\n  });\n\n  return typedRouter;\n}\n"],"names":["spec","createOpenApiRouter","path","url","fs","express"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"router.cjs.js","sources":["../../src/server/router.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LoggerService,\n  RootConfigService,\n} from '@backstage/backend-plugin-api';\nimport express from 'express';\nimport { createOpenApiRouter, spec } from '../schema/openapi';\nimport { DynamicPluginProvider } from '../manager';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as url from 'url';\nimport { FrontendRemoteResolvers } from './frontendRemotesServer';\nimport { Remote } from '../schema/openapi/generated/models';\nimport { JsonObject } from '@backstage/types';\n\nexport async function createRouter({\n  logger,\n  config,\n  dynamicPlugins,\n  resolvers,\n}: {\n  logger: LoggerService;\n  config: RootConfigService;\n  dynamicPlugins: DynamicPluginProvider;\n  resolvers: FrontendRemoteResolvers;\n}): Promise<express.Router> {\n  const externalBaseUrl = `${config.getString('backend.baseUrl')}/${\n    spec.info.title\n  }`;\n\n  const typedRouter = await createOpenApiRouter();\n\n  const frontendPluginRemotes: Remote[] = [];\n\n  const { default: defaultResolver, provider: resolverProvider } = resolvers;\n  for (const plugin of dynamicPlugins.frontendPlugins()) {\n    try {\n      const pluginScannedPackage = dynamicPlugins.getScannedPackage(plugin);\n      const pluginScannedPackagePath = path.resolve(\n        url.fileURLToPath(pluginScannedPackage.location),\n      );\n      const providedResolver = resolverProvider?.for(\n        plugin.name,\n        pluginScannedPackagePath,\n      );\n\n      const assetsPath = path.resolve(\n        pluginScannedPackagePath,\n        providedResolver?.assetsPathFromPackage ??\n          defaultResolver.assetsPathFromPackage,\n      );\n\n      const manifestFileName =\n        providedResolver?.manifestFileName ?? defaultResolver.manifestFileName;\n      const manifestLocation = path.resolve(assetsPath, manifestFileName);\n      if (!fs.existsSync(manifestLocation)) {\n        logger.error(\n          `Could not find manifest '${manifestLocation}' for frontend plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      let manifest: JsonObject;\n      try {\n        manifest = JSON.parse(fs.readFileSync(manifestLocation).toString());\n      } catch (error) {\n        logger.error(\n          `Dynamic frontend plugin manifest '${manifestLocation}' could not be parsed for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      if (!manifest.name || typeof manifest.name !== 'string') {\n        logger.error(\n          `Error in manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}: module name not found`,\n        );\n        continue;\n      }\n      if (\n        !manifest.metaData ||\n        typeof manifest.metaData !== 'object' ||\n        !('remoteEntry' in manifest.metaData) ||\n        !manifest.metaData.remoteEntry ||\n        typeof manifest.metaData.remoteEntry !== 'object' ||\n        !('name' in manifest.metaData.remoteEntry) ||\n        typeof manifest.metaData.remoteEntry.name !== 'string'\n      ) {\n        logger.error(\n          `Could not find remote entry asset in the manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      if (\n        !manifest.exposes ||\n        !Array.isArray(manifest.exposes) ||\n        !manifest.exposes.every<{ name: string }>(\n          (i): i is { name: string } =>\n            i !== null && typeof i === 'object' && 'name' in i,\n        )\n      ) {\n        logger.error(\n          `Could not find the exposes field in the manifest '${manifestLocation}' for plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      const getAdditionalRemoteInfo =\n        providedResolver?.getAdditionalRemoteInfo ??\n        providedResolver?.getAdditionaRemoteInfo ??\n        defaultResolver.getAdditionalRemoteInfo ??\n        defaultResolver?.getAdditionaRemoteInfo;\n      const getRemoteEntryType =\n        providedResolver?.getRemoteEntryType ??\n        defaultResolver.getRemoteEntryType;\n      const remoteEntryType = getRemoteEntryType(manifest);\n\n      let remoteEntryAsset = manifestFileName;\n      if (remoteEntryType === 'javascript') {\n        remoteEntryAsset = manifest.metaData.remoteEntry.name;\n      }\n\n      const remoteEntryAssetLocation = path.resolve(\n        assetsPath,\n        remoteEntryAsset,\n      );\n      if (!fs.existsSync(remoteEntryAssetLocation)) {\n        logger.error(\n          `Could not find remote entry asset '${remoteEntryAssetLocation}' for frontend plugin ${plugin.name}@${plugin.version}`,\n        );\n        continue;\n      }\n\n      const remoteAssetsPrefix = `/remotes/${plugin.name}`;\n      const remoteEntryPath = `${remoteAssetsPrefix}/${remoteEntryAsset}`;\n\n      const overrideExposedModules =\n        providedResolver?.overrideExposedModules ??\n        defaultResolver.overrideExposedModules;\n\n      const exposedModules = manifest.exposes.map(e => e.name);\n\n      frontendPluginRemotes.push({\n        packageName: plugin.name,\n        remoteInfo: {\n          name: manifest.name,\n          entry: `${externalBaseUrl}${remoteEntryPath}`,\n          ...getAdditionalRemoteInfo?.(manifest),\n        },\n        exposedModules:\n          overrideExposedModules?.(exposedModules, manifest) ?? exposedModules,\n      });\n\n      const customizeManifest =\n        providedResolver?.customizeManifest ??\n        defaultResolver.customizeManifest;\n      if (remoteEntryType === 'manifest' && customizeManifest) {\n        const customizedContent = customizeManifest(manifest);\n        typedRouter.use(`${remoteEntryPath}`, (_, res) => {\n          res.json(customizedContent);\n        });\n      }\n      typedRouter.use(remoteAssetsPrefix, express.static(assetsPath));\n      logger.info(\n        `Exposed dynamic frontend plugin '${plugin.name}' from '${assetsPath}' `,\n      );\n    } catch (error) {\n      logger.error(\n        `Unexpected error when exposing dynamic frontend plugin '${plugin.name}@${plugin.version}'`,\n        error,\n      );\n      continue;\n    }\n  }\n\n  logger.info(`/remotes => ${JSON.stringify(frontendPluginRemotes)}`);\n  typedRouter.get('/remotes', (_, res) => {\n    res.status(200).json(frontendPluginRemotes);\n  });\n\n  return typedRouter;\n}\n"],"names":["spec","createOpenApiRouter","path","url","fs","express"],"mappings":"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"}
\ No newline at end of file
