name: Auto Build e2e-runner for New Release Branch

on:
  create:
  push:
    branches:
      - 'release-1.**'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: quay.io
  REGISTRY_IMAGE: rhdh-community/rhdh-e2e-runner

jobs:
  detect-new-release-branch:
    runs-on: ubuntu-latest
    outputs:
      is_new_release: ${{ steps.check.outputs.is_new_release }}
      branch_name: ${{ steps.check.outputs.branch_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect if this is a new release branch
        id: check
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Ref name: ${{ github.ref_name }}"

          # Check if it's a release-* branch
          if [[ "${{ github.ref_name }}" =~ ^release-1\.[0-9]+$ ]]; then
            BRANCH_NAME="${{ github.ref_name }}"
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
            echo "Detected release branch: $BRANCH_NAME"

            # Check if tag already exists in Quay.io
            echo "Checking if tag $BRANCH_NAME exists in Quay.io..."
            QUAY_TAG_EXISTS=$(curl -s "https://quay.io/api/v1/repository/rhdh-community/rhdh-e2e-runner/tag/" | jq -r --arg tag "$BRANCH_NAME" '.tags[]? | select(.name == $tag) | .name' 2>/dev/null || echo "")

            if [[ -z "$QUAY_TAG_EXISTS" ]]; then
              echo "✅ New release branch detected: $BRANCH_NAME (no Quay tag exists)"
              echo "is_new_release=true" >> $GITHUB_OUTPUT
            else
              echo "⚠️ Release branch $BRANCH_NAME already has Quay tag, skipping build"
              echo "is_new_release=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "ℹ️ Not a release branch pattern (release-1.x), skipping"
            echo "is_new_release=false" >> $GITHUB_OUTPUT
            echo "branch_name=" >> $GITHUB_OUTPUT
          fi

  build-new-release-image:
    name: Build & Push New Release e2e-runner Image
    needs: detect-new-release-branch
    if: needs.detect-new-release-branch.outputs.is_new_release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.detect-new-release-branch.outputs.branch_name }}

      - name: Prepare Environment Variables
        run: |
          echo "PLATFORM=linux/amd64" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ needs.detect-new-release-branch.outputs.branch_name }}" >> $GITHUB_ENV

      - name: Get the last commit short SHA
        uses: ./.github/actions/get-sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .ibm/images/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}-${{ env.SHORT_SHA }}
          platforms: ${{ env.PLATFORM }}

      - name: Success notification
        run: |
          echo "✅ Successfully created e2e-runner image for new release branch!"
          echo "📦 Image available at:"
          echo "   - ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}"
          echo "   - ${{ env.REGISTRY }}/${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}-${{ env.SHORT_SHA }}"
