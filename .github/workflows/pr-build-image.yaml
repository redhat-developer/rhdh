# Copyright Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PR Build Image

on:
  pull_request_target:
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  REGISTRY: quay.io

jobs:
  check-commit-author:
    # This job is used to check if the commit author is an active member of the rhdh team.
    # It is used to determine if the PR should be run with the internal or external environment.
    # The job is run on the main branch to ensure that the action is not tampered with.
    runs-on: ubuntu-latest
    outputs:
      is_active_team_member: ${{ steps.team-check.outputs.is_active_member }}
    steps:   
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.RHDH_GITHUB_APP_ID }}
          private-key: ${{ secrets.RHDH_GITHUB_APP_PRIVATE_KEY }}
      - name: Checkout main branch for secure version of check-author action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 1
          ref: main  # Always use main branch for security-critical action
          persist-credentials: false
      - name: Check if commit author is an active member of the team
        id: team-check
        uses: ./.github/actions/check-author
        with:
          author: ${{ github.actor }}
          organization: redhat-developer
          team: rhdh
          gh_token: ${{ steps.app-token.outputs.token }}
  
  authorize:
    # The 'external' environment is configured with the maintainers team as required reviewers.
    # All the subsequent jobs in this workflow 'need' this job, which will require manual approval for PRs coming from external forks.
    # Use 'internal' environment if the author is in the team OR if it's an internal PR (not from a fork)
    # see list of approvers in OWNERS file
    environment:
      ${{ (needs.check-commit-author.outputs.is_active_team_member == 'true' || github.event.pull_request.head.repo.full_name == github.repository) && 'internal' || 'external' }}
    runs-on: ubuntu-latest
    needs: check-commit-author
    steps:
      - name: Check if internal PR
        id: check
        run: |
          if [[ "${{ needs.check-commit-author.outputs.is_active_team_member }}" == "true" ]]; then
            echo "✓ Commit author is in rhdh team - using internal environment"
          elif [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]]; then
            echo "✓ Internal PR (not from fork) - using internal environment"
          else
            echo "✓ External PR from fork from non-rhdh team member - using external environment for security"
          fi
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: authorize
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Check Image and Relevant Changes
        id: check-image
        uses: ./.github/actions/check-image-and-changes

      # Build is needed if:
      # 1. Not explicitly skipped ([skip-build] not present) AND
      # 2. Either has relevant changes OR image doesn't exist
      - name: Get the latest commits from base branch
        if: steps.check-image.outputs.is_skipped == 'false' && (steps.check-image.outputs.relevant_changes == 'true' || steps.check-image.outputs.image_exists == 'false')
        run: |
          git remote add base-origin https://github.com/${{ github.repository }} || true
          git config user.name "${{ github.event.pull_request.user.login }}"
          git config user.email "${{ github.event.pull_request.user.email }}"
          echo "Updating PR with latest commits from ${{ github.event.pull_request.base.ref }} ..."
          git fetch base-origin ${{ github.event.pull_request.base.ref }}
          git merge --no-edit base-origin/${{ github.event.pull_request.base.ref }}

      - name: Build and Push with Buildx
        if: steps.check-image.outputs.is_skipped == 'false' && (steps.check-image.outputs.relevant_changes == 'true' || steps.check-image.outputs.image_exists == 'false')
        uses: ./.github/actions/docker-build
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
          imageName: rhdh-community/rhdh
          imageTags: |
            type=ref,prefix=pr-,suffix=-${{ env.SHORT_SHA }},event=pr
            type=ref,prefix=pr-,event=pr
          imageLabels: quay.expires-after=14d
          push: true
          platform: linux/amd64

      - name: Comment the image pull link
        if: steps.check-image.outputs.is_skipped == 'false' && (steps.check-image.outputs.relevant_changes == 'true' || steps.check-image.outputs.image_exists == 'false')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The image is available at:\n* [`quay.io/rhdh-community/rhdh:pr-${{ github.event.number }}`](https://quay.io/rhdh-community/rhdh:pr-${{ github.event.number }}) or\n* [`quay.io/rhdh-community/rhdh:pr-${{ github.event.number }}-${{ env.SHORT_SHA }}`](https://quay.io/rhdh-community/rhdh:pr-${{ github.event.number }}-${{ env.SHORT_SHA }})'
            })
