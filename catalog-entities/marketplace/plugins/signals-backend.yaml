# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: signals-backend
  namespace: rhdh
  title: Signals Backend Plugin
  description: |
    Signals backend plugin allows backend plugins to publish messages to frontend plugins. It is used by the Notifications system in Backstage
  annotations:
    extensions.backstage.io/pre-installed: 'true'
    extensions.backstage.io/verified-by: Red Hat
  tags:
    - backstage-core
    - messaging
  links:
    - url: https://backstage.io/docs/notifications/
      title: Backstage documentation
    - title: Bugs
      url: https://issues.redhat.com/browse/RHIDP
    - title: Documentation for Red Hat Developer Hub
      url: https://docs.redhat.com/en/documentation/red_hat_developer_hub
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/

spec:

  author: Red Hat
  support: production  # This plugin has GA status
  lifecycle: active
  publisher: Red Hat

  categories:
    - Messaging # One category will show up on the tile view

  highlights:
    - Allows backend plugins to publish messages to frontend plugins

  description: |
    This Signals backend plugin allows backend plugins to publish messages to frontend plugins.
    It is used by the Notifications system in Backstage.

    The Backstage Notifications System provides a way for plugins and external services to send notifications to Backstage users. 
    These notifications are displayed in the dedicated page of the Backstage frontend UI or by frontend plugins per specific scenarios. 
    Additionally, notifications can be sent to external channels (like email) via "processors" implemented within plugins.

    ## Adding The Plugin To Red Hat Developer Hub

    See the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub) 
    for further instructions on how to add, enable, configure, and remove plugins in your instance.

    ## Configuring The Plugin ##

    Plugins often need additional configuration to work correctly - particularly those that integrate with other 
    systems. See the original source code repository, the software vendor, or the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub)
    for further details regarding the configuration required.


  # Images are base 64 encoded SVGs (below is a blank square from the mockup)
  icon: data:image/svg+xml;base64,
    PHN2ZyB3aWR0aD0iNzAiIGhlaWdodD0iNzAiIHZpZXdCb3g9IjAgMCA3MCA3MCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93
    d3cudzMub3JnLzIwMDAvc3ZnIj4KPHJlY3Qgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiBmaWxsPSIjQzRDNEM0Ii8+Cjwvc3ZnPgo=

  packages:
  - backstage-plugin-signals-backend