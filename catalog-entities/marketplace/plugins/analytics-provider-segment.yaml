# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: analytics-provider-segment
  namespace: rhdh
  title: Segment Analytics Module
  description: ''
  annotations:
    extensions.backstage.io/pre-installed: 'true'
  links:
    - url: https://red.ht/rhdh
      title: Homepage
    - url: https://issues.redhat.com/browse/RHIDP
      title: Bugs
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/backstage-community-plugin-analytics-provider-segment
  tags: []
spec:
  categories:
    - Analytics
  authors:
    - name: Backstage Community
  publisher: Red Hat
  # support:
  #   level: production
  lifecycle: active
  description: |
    This plugin provides an implementation of the Backstage Analytics API for
    Segment. Once installed and configured, analytics events will be sent to
    Segment as your users navigate and use your Backstage instance.

    This plugin contains no other functionality.
  installation: |
    ## Configuration

    1. Wire up the API implementation to your App in `packages/app/src/apis.ts`:

      ```tsx title="packages/app/src/apis.ts"
      /* highlight-add-start */
      import { SegmentAnalytics } from '@backstage-community/plugin-analytics-provider-segment';
      import {
        analyticsApiRef,
        configApiRef,
        identityApiRef,
      } from '@backstage/core-plugin-api';

      /* highlight-add-end */

      export const apis: AnyApiFactory[] = [
        // Other APIs...
        // Instantiate and register the GA Analytics API Implementation.
        /* highlight-add-start */
        createApiFactory({
          api: analyticsApiRef,
          deps: { configApi: configApiRef, identityApi: identityApiRef },
          factory: ({ configApi, identityApi }) =>
            SegmentAnalytics.fromConfig(configApi, identityApi),
        }),
        /* highlight-add-end */
      ];
      ```

    2. Configure the plugin in your `app-config.yaml`:

    The following is the minimum configuration required to start sending analytics
    events to Segment. All that's needed is your Segment Write Key

    ```yaml title="app-config.yaml"
    app:
      analytics:
        segment:
          # highlight-start
          writeKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          maskIP: true # prevents IP addresses from being sent if true
          # highlight-end
    ```

    ## Debugging and Testing

    In pre-production environments, you may wish to set additional configurations
    to turn off reporting to Analytics. You can do so like this:

    ```yaml title="app-config.yaml"
    app:
      analytics:
        segment:
          # highlight-next-line
          testMode: true # prevents data from being sent if true
    ```

    You might commonly set the above in an `app-config.local.yaml` file, which is
    normally `gitignore`'d but loaded and merged in when Backstage is bootstrapped.
