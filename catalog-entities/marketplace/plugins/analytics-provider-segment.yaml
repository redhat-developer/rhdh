# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: analytics-provider-segment
  namespace: rhdh
  title: Segment Analytics Module
  description: |
    Segment Analytics Module for Backstage. This plugin ships as enabled by default in Red Hat Developer Hub.
  annotations:
    extensions.backstage.io/pre-installed: 'true'
    extensions.backstage.io/verified-by: Red Hat
  links:
    - url: https://red.ht/rhdh
      title: Homepage
    - url: https://issues.redhat.com/browse/RHIDP
      title: Bugs
    - title: Documentation for Red Hat Developer Hub
      url: https://docs.redhat.com/en/documentation/red_hat_developer_hub
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/backstage-community-plugin-analytics-provider-segment
  tags: 
    - analytics
spec:
  categories:
    - Analytics
  authors:
    - name: Backstage Community
  publisher: Red Hat
  support: production
  lifecycle: active
  description: |
    This plugin ships as enabled by default in Red Hat Developer Hub.

    This plugin provides an implementation of the Backstage Analytics API for
    Segment. Once installed and configured, analytics events will be sent to
    Segment as your users navigate and use your Backstage instance.

    This plugin contains no other functionality.

    ## Adding The Plugin To Red Hat Developer Hub

    See the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub) 
    for further instructions on how to add, enable, configure, and remove plugins in your instance.

  icon: data:image/svg+xml;base64,
    PHN2ZyBpZD0ibG9nb3NhbmR0eXBlc19jb20iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAw
    L3N2ZyIgdmlld0JveD0iMCAwIDE1MCAxNTAuMiI+PHN0eWxlPi5zdDF7ZmlsbC1ydWxlOmV2ZW5v
    ZGQ7Y2xpcC1ydWxlOmV2ZW5vZGQ7ZmlsbDojNmJhYzkyfTwvc3R5bGU+PHBhdGggZD0iTTAgLjJo
    MTUwdjE1MEgwVi4yeiIgZmlsbD0ibm9uZSIgaWQ9IkxheWVyXzIiLz48ZyBpZD0iU2VnbWVudCI+
    PHBhdGggY2xhc3M9InN0MSIgZD0iTTEzLjggNTkuOGMtLjMtLjYtLjQtMS4yLS4zLTEuOUMxNi45
    IDQ0LjYgMjQuNCAzMi43IDM1IDI0IDUxLjggMTAuMSA3NC42IDYuMSA5NS4yIDEzLjNjLjYuMiAx
    LjEuNyAxLjQgMS4zLjIuNi4yIDEuMyAwIDEuOWwtMy4xIDguMmMtLjQgMS4yLTEuOCAxLjktMyAx
    LjQtMTYuMS01LjYtMzQtMi40LTQ3LjIgOC40LTguMiA2LjktMTQuMSAxNi4yLTE2LjcgMjYuNi0u
    MyAxLTEuMiAxLjgtMi4zIDEuOGgtLjVsLTguNS0yYy0uNi0uMi0xLjItLjYtMS41LTEuMU0xMzYu
    NSA4MC4yYy0uNC0uNS0xLS44LTEuNi0uOWwtOC42LS45Yy0xLjMtLjEtMi40LjgtMi42IDIuMS0x
    LjUgMTEuNy03LjIgMjIuNi0xNS45IDMwLjYtMTMuNyAxMi43LTMzLjUgMTYuNS01MC45IDkuOC0x
    LjItLjUtMi42LjEtMyAxLjNsLTMuNCA4LjJjLS4zLjYtLjMgMS4zIDAgMS45LjIuNi43IDEuMSAx
    LjMgMS4zIDcuMiAyLjggMTQuOSA0LjMgMjIuNyA0LjMgMTUuNyAwIDMwLjgtNS45IDQyLjMtMTYu
    NiAxMS4xLTEwLjMgMTguMi0yNC4yIDIwLjEtMzkuMi4xLS43LS4xLTEuNC0uNC0xLjlNODguNyA5
    Mi4xdi04LjljMC0xLjMtMS4xLTIuNC0yLjQtMi40SDE1LjZjLTEuMyAwLTIuNCAxLjEtMi40IDIu
    NHY4LjljMCAxLjMgMS4xIDIuNCAyLjQgMi40aDcwLjdjMS40LjEgMi40LTEgMi40LTIuNE02MS41
    IDUxLjJWNjBjMCAxLjMgMSAyLjQgMi40IDIuNGg3MC43YzEuMyAwIDIuNC0xLjEgMi40LTIuNHYt
    OC45YzAtMS4zLTEuMS0yLjMtMi40LTIuM0g2My45Yy0xLjMgMC0yLjQgMS4xLTIuNCAyLjRNMTEz
    LjIgMjEuOGMtNC0uMS03LjMgMy4xLTcuNCA3LjEtLjEgNCAzLjEgNy4zIDcuMSA3LjQgNCAuMSA3
    LjMtMy4xIDcuNC03LjF2LS4xYy4xLTQtMy4xLTcuMi03LjEtNy4zTTM0LjUgMTA5LjVjLTQtLjEt
    Ny4zIDMuMS03LjQgNy4xLS4xIDQgMy4xIDcuMyA3LjEgNy40IDQgLjEgNy4zLTMuMSA3LjQtNy4x
    di0uMWMuMS00LjEtMy4xLTcuMy03LjEtNy4zIi8+PC9nPjwvc3ZnPg==

  installation: |
    ## Configuration

    1. Wire up the API implementation to your App in `packages/app/src/apis.ts`:

      ```tsx title="packages/app/src/apis.ts"
      /* highlight-add-start */
      import { SegmentAnalytics } from '@backstage-community/plugin-analytics-provider-segment';
      import {
        analyticsApiRef,
        configApiRef,
        identityApiRef,
      } from '@backstage/core-plugin-api';

      /* highlight-add-end */

      export const apis: AnyApiFactory[] = [
        // Other APIs...
        // Instantiate and register the GA Analytics API Implementation.
        /* highlight-add-start */
        createApiFactory({
          api: analyticsApiRef,
          deps: { configApi: configApiRef, identityApi: identityApiRef },
          factory: ({ configApi, identityApi }) =>
            SegmentAnalytics.fromConfig(configApi, identityApi),
        }),
        /* highlight-add-end */
      ];
      ```

    2. Configure the plugin in your `app-config.yaml`:

    The following is the minimum configuration required to start sending analytics
    events to Segment. All that's needed is your Segment Write Key

    ```yaml title="app-config.yaml"
    app:
      analytics:
        segment:
          # highlight-start
          writeKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          maskIP: true # prevents IP addresses from being sent if true
          # highlight-end
    ```

    ## Debugging and Testing

    In pre-production environments, you may wish to set additional configurations
    to turn off reporting to Analytics. You can do so like this:

    ```yaml title="app-config.yaml"
    app:
      analytics:
        segment:
          # highlight-next-line
          testMode: true # prevents data from being sent if true
    ```

    You might commonly set the above in an `app-config.local.yaml` file, which is
    normally `gitignore`'d but loaded and merged in when Backstage is bootstrapped.

  packages:
     - backstage-community-plugin-analytics-provider-segment