# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: azure-repositories
  namespace: rhdh
  title: Azure Repository Software Template Actions
  description: A collection of Backstage scaffolder backend modules for Azure repositories.
  annotations:
    extensions.backstage.io/pre-installed: 'true'
    github.com/project-slug: Parfuemerie-Douglas/scaffolder-backend-module-azure-repositories
  links:
    - url: https://github.com/Parfuemerie-Douglas/scaffolder-backend-module-azure-repositories
      title: GitHub
  tags:
    - microsoft
    - azure
    - cloud
    - automation
    - software-templates
spec:
  author: ParfÃ¼merie Douglas
  publisher: Red Hat

  categories:
    - Automation
    - Software Templates

  icon: data:image/svg+xml;base64,
    PHN2ZyB2aWV3Qm94PSIwIDAgMTI4IDEyOCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAv
    c3ZnIj48ZGVmcz48bGluZWFyR3JhZGllbnQgaWQ9ImF6dXJlLW9yaWdpbmFsLWEiIHgxPSI2MC45
    MTkiIHkxPSI5LjYwMiIgeDI9IjE4LjY2NyIgeTI9IjEzNC40MjMiIGdyYWRpZW50VW5pdHM9InVz
    ZXJTcGFjZU9uVXNlIj48c3RvcCBzdG9wLWNvbG9yPSIjMTE0QThCIi8+PHN0b3Agb2Zmc2V0PSIx
    IiBzdG9wLWNvbG9yPSIjMDY2OUJDIi8+PC9saW5lYXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQg
    aWQ9ImF6dXJlLW9yaWdpbmFsLWIiIHgxPSI3NC4xMTciIHkxPSI2Ny43NzIiIHgyPSI2NC4zNDQi
    IHkyPSI3MS4wNzYiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBzdG9wLW9w
    YWNpdHk9Ii4zIi8+PHN0b3Agb2Zmc2V0PSIuMDcxIiBzdG9wLW9wYWNpdHk9Ii4yIi8+PHN0b3Ag
    b2Zmc2V0PSIuMzIxIiBzdG9wLW9wYWNpdHk9Ii4xIi8+PHN0b3Agb2Zmc2V0PSIuNjIzIiBzdG9w
    LW9wYWNpdHk9Ii4wNSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIwIi8+PC9saW5l
    YXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQgaWQ9ImF6dXJlLW9yaWdpbmFsLWMiIHgxPSI2OC43
    NDIiIHkxPSI1Ljk2MSIgeDI9IjExNS4xMjIiIHkyPSIxMjkuNTI1IiBncmFkaWVudFVuaXRzPSJ1
    c2VyU3BhY2VPblVzZSI+PHN0b3Agc3RvcC1jb2xvcj0iIzNDQ0JGNCIvPjxzdG9wIG9mZnNldD0i
    MSIgc3RvcC1jb2xvcj0iIzI4OTJERiIvPjwvbGluZWFyR3JhZGllbnQ+PC9kZWZzPjxwYXRoIGQ9
    Ik00Ni4wOS4wMDJoNDAuNjg1TDQ0LjU0MSAxMjUuMTM3YTYuNDg1IDYuNDg1IDAgMDEtNi4xNDYg
    NC40MTNINi43MzNhNi40ODIgNi40ODIgMCAwMS01LjI2Mi0yLjY5OSA2LjQ3NCA2LjQ3NCAwIDAx
    LS44NzYtNS44NDhMMzkuOTQ0IDQuNDE0QTYuNDg4IDYuNDg4IDAgMDE0Ni4wOSAweiIgZmlsbD0i
    dXJsKCNhenVyZS1vcmlnaW5hbC1hKSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLjU4NyA0LjQ2OCkg
    c2NhbGUoLjkxOTA0KSIvPjxwYXRoIGQ9Ik05Ny4yOCA4MS42MDdIMzcuOTg3YTIuNzQzIDIuNzQz
    IDAgMDAtMS44NzQgNC43NTFsMzguMSAzNS41NjJhNS45OTEgNS45OTEgMCAwMDQuMDg3IDEuNjFo
    MzMuNTc0eiIgZmlsbD0iIzAwNzhkNCIvPjxwYXRoIGQ9Ik00Ni4wOS4wMDJBNi40MzQgNi40MzQg
    MCAwMDM5LjkzIDQuNUwuNjQ0IDEyMC44OTdhNi40NjkgNi40NjkgMCAwMDYuMTA2IDguNjUzaDMy
    LjQ4YTYuOTQyIDYuOTQyIDAgMDA1LjMyOC00LjUzMWw3LjgzNC0yMy4wODkgMjcuOTg1IDI2LjEw
    MWE2LjYxOCA2LjYxOCAwIDAwNC4xNjUgMS41MTloMzYuMzk2bC0xNS45NjMtNDUuNjE2LTQ2LjUz
    My4wMTFMODYuOTIyLjAwMnoiIGZpbGw9InVybCgjYXp1cmUtb3JpZ2luYWwtYikiIHRyYW5zZm9y
    bT0idHJhbnNsYXRlKC41ODcgNC40NjgpIHNjYWxlKC45MTkwNCkiLz48cGF0aCBkPSJNOTguMDU1
    IDQuNDA4QTYuNDc2IDYuNDc2IDAgMDA5MS45MTcuMDAySDQ2LjU3NWE2LjQ3OCA2LjQ3OCAwIDAx
    Ni4xMzcgNC40MDZsMzkuMzUgMTE2LjU5NGE2LjQ3NiA2LjQ3NiAwIDAxLTYuMTM3IDguNTVoNDUu
    MzQ0YTYuNDggNi40OCAwIDAwNi4xMzYtOC41NXoiIGZpbGw9InVybCgjYXp1cmUtb3JpZ2luYWwt
    YykiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC41ODcgNC40NjgpIHNjYWxlKC45MTkwNCkiLz48L3N2
    Zz4K

  highlights:
    - Azure cloud integration
    - Software Template actions

  description: |
    # scaffolder-backend-module-azure-repositories

    Welcome to the Microsoft Azure repository actions for the `scaffolder-backend`.

    This plugin contains a collection of actions:

    - `azure:repo:clone`
    - `azure:repo:push`
    - `azure:repo:pr`

    ## Getting started

    Create your Backstage application using the Backstage CLI as described here:
    [https://backstage.io/docs/getting-started/create-an-app](https://backstage.io/docs/getting-started/create-an-app).

    > Note: If you are using this plugin in a Backstage monorepo that contains the
    > code for `@backstage/plugin-scaffolder-backend`, you need to modify your
    > internal build processes to transpile files from the `node_modules` folder as
    > well.

    You need to configure the actions in your backend:

    ## From your Backstage root directory

    ```sh
    # From your Backstage root directory
    yarn --cwd packages/backend add @parfuemerie-douglas/scaffolder-backend-module-azure-repositories
    ```

    Configure the actions (you can check the
    [docs](https://backstage.io/docs/features/software-templates/writing-custom-actions/#register-action-with-new-backend-system)
    to see all options):

    ```typescript
    // packages/backend/src/index.ts
    const backend = createBackend();

    // ...

    backend.add(import('@parfuemerie-douglas/scaffolder-backend-module-azure-repositories'))
    ```

    The Azure repository actions use an [Azure PAT (personal access
    token)](https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate)
    for authorization. The PAT requires `Read` permission for `Code` for the
    `azure:repo:clone` action. For the `azure:repo:push` action the PAT requires
    `Read & write` permission for `Code`. Simply add the PAT to your
    `app-config.yaml`:

    ```yaml
    # app-config.yaml

    integrations:
      azure:
        - host: dev.azure.com
          credentials:
            - personalAccessToken: ${AZURE_TOKEN}
    ```

    Read more on integrations in Backstage in the [Integrations
    documentation](https://backstage.io/docs/integrations/).

    ## Using the template

    After loading and configuring the Azure repository template actions, you can use
    the actions in your template:

    ```yaml
    # template.yaml

    apiVersion: scaffolder.backstage.io/v1beta3
    kind: Template
    metadata:
      name: azure-repo-demo
      title: Azure Repository Test
      description: Clone and push to an Azure repository example.
    spec:
      owner: parfuemerie-douglas
      type: service

      parameters:
        - title: Fill in some steps
          required:
            - name
            - owner
          properties:
            name:
              title: Project name
              type: string
              description: Choose a unique project name.
              ui:field: EntityNamePicker
              ui:autofocus: true
            owner:
              title: Owner
              type: string
              description: Select an owner for the Backstage component.
              ui:field: OwnerPicker
              ui:options:
                allowedKinds:
                  - Group

      steps:
        - id: cloneAzureRepo
          name: Clone Azure Repo
          action: azure:repo:clone
          input:
            remoteUrl: "https://<MY_AZURE_ORGANIZATION>@dev.azure.com/<MY_AZURE_ORGANIZATION>/<MY_AZURE_PROJECT>/_git/<MY_AZURE_REPOSITORY>"
            branch: "main"
            targetPath: ./sub-directory

        - id: fetch
          name: Template Skeleton
          action: fetch:template
          input:
            url: ./skeleton
            targetPath: ./sub-directory
            values:
              name: ${{ parameters.name }}
              owner: ${{ parameters.owner }}

        - id: pushAzureRepo
          name: Push to Remote Azure Repo
          action: azure:repo:push
          input:
            branch: <MY_AZURE_REPOSITORY_BRANCH>
            sourcePath: ./sub-directory
            gitCommitMessage: Add ${{ parameters.name }} project files

        - id: pullRequestAzureRepo
          name: Create a Pull Request to Azure Repo
          action: azure:repo:pr
          input:
            sourceBranch: <MY_AZURE_REPOSITORY_BRANCH>
            targetBranch: "main"
            repoId: <MY_AZURE_REPOSITORY>
            title: ${{ parameters.name }}
            project: <MY_AZURE_PROJECT>
            organization: <MY_AZURE_ORGANIZATION>
            supportsIterations: false

        - id: register
          name: Register
          action: catalog:register
          input:
            repoContentsUrl: "dev.azure.com?owner=<MY_AZURE_PROJECT>&repo=<MY_AZURE_REPOSITORY>&organization=<MY_AZURE_ORGANIZATION>&version=<MY_AZURE_REPOSITORY_BRANCH>"
            catalogInfoPath: "/catalog-info.yaml"

      output:
        links:
          - title: Repository
            url: "dev.azure.com?owner=<MY_AZURE_PROJECT>&repo=<MY_AZURE_REPOSITORY>&organization=<MY_AZURE_ORGANIZATION>"
          - title: Open in catalog
            icon: catalog
            entityRef: ${{ steps.register.output.entityRef }}
    ```

    Replace `<MY_AZURE_ORGANIZATION>` with the name of your Azure DevOps
    organization, `<MY_AZURE_PROJECT>` with the name of your Azure DevOps project,
    `<MY_AZURE_REPOSITORY_BRANCH` with the name of the desired Azure DevOps repository branch,
    and `<MY_AZURE_REPOSITORY>` with the name of your Azure DevOps repository.

    NOTE: You will not be able to register the Pull Request since the file will not exist from the main branch!

    You can find a list of all registred actions including their parameters at the
    `/create/actions` route in your Backstage application.
