# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: azure-container-registry
  namespace: rhdh
  title: Azure Container Registry plugin for Backstage
  description: ''
  annotations:
    extensions.backstage.io/pre-installed: 'true'
  links:
    - url: https://red.ht/rhdh
      title: Homepage
    - url: https://issues.redhat.com/browse/RHIDP
      title: Bugs
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/backstage-community-plugin-acr
  tags:
    - azure
    - container-registry
    - kubernetes
    - openshift
    - cicd
    - software-catalog
spec:
  categories:
    - Kubernetes
  icon: data:image/svg+xml;base64,
    PHN2ZyB3aWR0aD0iOTYiIGhlaWdodD0iOTYiIHZpZXdCb3g9IjAgMCA5NiA5NiIgZmlsbD0ibm9u
    ZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogIHhtbG5zOnhsaW5rPSJodHRw
    Oi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KICA8ZyBjbGlwLXBhdGg9InVybCgjY2xpcDBfMjZf
    MTM1KSI+CiAgICA8ZyBjbGlwLXBhdGg9InVybCgjY2xpcDFfMjZfMTM1KSI+CiAgICAgIDxjaXJj
    bGUgY3g9IjQ4IiBjeT0iNDgiIHI9IjQ4IiBmaWxsPSIjMDA5NTk2IiAvPgogICAgPC9nPgogICAg
    PHJlY3QgeD0iOSIgeT0iOSIgd2lkdGg9Ijc4IiBoZWlnaHQ9Ijc4IiBmaWxsPSJ1cmwoI3BhdHRl
    cm4wKSIgLz4KICA8L2c+CiAgPGRlZnM+CiAgICA8cGF0dGVybiBpZD0icGF0dGVybjAiIHBhdHRl
    cm5Db250ZW50VW5pdHM9Im9iamVjdEJvdW5kaW5nQm94IiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj4K
    ICAgICAgPHVzZSB4bGluazpocmVmPSIjaW1hZ2UwXzI2XzEzNSIgdHJhbnNmb3JtPSJzY2FsZSgw
    LjAwMjc3Nzc4KSIgLz4KICAgIDwvcGF0dGVybj4KICAgIDxjbGlwUGF0aCBpZD0iY2xpcDBfMjZf
    MTM1Ij4KICAgICAgPHJlY3Qgd2lkdGg9Ijk2IiBoZWlnaHQ9Ijk2IiBmaWxsPSJ3aGl0ZSIgLz4K
    ICAgIDwvY2xpcFBhdGg+CiAgICA8Y2xpcFBhdGggaWQ9ImNsaXAxXzI2XzEzNSI+CiAgICAgIDxy
    ZWN0IHdpZHRoPSI5NiIgaGVpZ2h0PSI5NiIgZmlsbD0id2hpdGUiIC8+CiAgICA8L2NsaXBQYXRo
    PgogICAgPGltYWdlIGlkPSJpbWFnZTBfMjZfMTM1IiB3aWR0aD0iMzYwIiBoZWlnaHQ9IjM2MCIK
    ICAgICAgeGxpbms6aHJlZj0iZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5T
    VWhFVWdBQUFXZ0FBQUZvQ0FZQUFBQjY1V0hWQUFBQUNYQklXWE1BQUc2NkFBQnV1Z0hXM3JFWEFB
    QVVwa2xFUVZSNG5PM2RnWEhjT0pZR1lQSnFBM0FJZGdaV0JDZG5ZR1ZnUlhCV0JMWWowR1FnWFFS
    eUJ0WkdZR2NnWldCbGdDdG8wWE85V2xraTJRVDdnZnkrcXFtYUduc2tFbUQvRFQ0Q1lBY0FBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQURCYzMzcGJwWlJPQXh4R2VIM2YzMjY5RGRiRWRUOU02OWQ5c3dHZFV2
    clVkZDJYcnV2ZUJqaWNGdHgzWFhmUjkvMzNyVGRFeTF6M296VjkzVGNaMENtbHE2N3JQZ1U0bEJa
    ZDkzMS92dlZHYUpIci9pQk5YdmZOQlhSSzZXUFhkVGNCRHFWbDUzM2ZYMis5RVZyaXVwOUZjOWQ5
    aXdGOTUvYnVZUGQ5Mzc5ci9CdzJ4WFUvaSthdSsvOEtjQXlEbFFjakx0TER2ZldRcVIydSs5azBk
    OTAzRmRCZDE3MEpjQXl3Tk5mOVJyVVcwQUNiMFZwQVB3UTRCbGlhNjM2ampLQzM2ZDdDbFhhVXZy
    cmZlanRza1lEZXBvdXROMENEdm0yOUFiWklRRy9QdGRXRTdTbnpkODFkM3hnQnZSMzVGdm5NS3NK
    MmxiNDdVKzdZam45czRFeno3Znl2QU1keFZHck82MUR1ZnI2YngvN29mZGQxbHdHT281b3RCUFF2
    NGNUYXVLWWZGL0FFT0lxNmxEZ0FnaExRQUVFSmFJQ2dCRFJBVUFJYUlDZ0JEUkNVZ0FZSVNrQURC
    Q1dnQVlJUzBBQkJDV2lBb0FRMFFGQUNHaUFvQVEwUWxJQUdDR29MKzBHekFTbWx2SG43bTNLbUQz
    M2ZiLzRsRGJUUENKcW1wWlErcFpUdXVxNzcyWFhkai9MUHovemY4cC9wWFZvbW9HbFNmdVZUU2lt
    SDhsWFhkVytmT1lmODM2N3kzL0Y2S0ZvbG9HbEtTdWx0U3VtbWpKVGZEemoyL0hkKzVQOG4vNzk2
    bTVZSWFKcVFVbnFUVXZwYVNoa2ZKeHp6eDFMNitKcC9sbDZuQlFLYThFb3RPUWZ6bDcwSGdWTzhL
    VC9qcC9vMExSRFFoRlhxekQ5ZXFETlB0YXRQLzFDZkpqSUJUVGlsbkhGVjZzdzFBL1MwMUtldmxE
    MklTRUFUU3FrejUybHpTNVlnOHUrNks3OGJ3aERRaEpCUytsam1NeDlhWjU3cXNUNWQ1azlQZVFn
    SnN4UFFIRldaTnBkTEdUY3oxNW1ueXNkd1UrclRwdVZ4VkFLYW95aDE1c3RTem9qNG9PNjBsRDB1
    MWFjNUZnSE40bEpLbjBzd2YyNmc5VCtYb0c3aFdGa1pBYzFpeXJTNUhNeVhSNm96VDVXUDliTFVw
    MDNMWXpFQ211cWVMTSt1V2RlOUxmL1U4dGF5Y1pZa29LbG1iM24yM2NUbDJVUGRkMTMzb2UvN3gz
    L3l2NWYvVnN2SDNiUTg5V2xxRXRCVVVaWlM3NmJOMWZMUWRkMUYzL2Z2K3I3L2UrU2MvejMvdC94
    bjVlL1U4cVVFdFdYalZDR2dtZFdUYlVCcmppNy82cm91Qi9OZmYvb0w1Yy9lbGI5Ynl4dmJtbEtM
    Z0dZV3BjNThOV0liMEtueVNQbWs3L3M4Y241MWRKei9UdjY3K2YrcFhKOSt2N2RzWEgyYVdRaG9E
    dkprRzlDYXQvcTVwbnhXNnN5algyZVYvNTlTbno2clhKLytaRnRUNWlLZ21XekdiVUJma2tmSjMw
    cWQrZnVoUHl6L2pGS2YvbGF4UG0xYlUyWWhvQmt0djZDMTBqYWdUMTJYY3Nic214aVZuM2xTZmtj
    dCs5dWExaXo3c0ZJQ21zSDJ0Z0g5V1hsNTltMlpObmZlOTMyMWNrVCsyZmwzbEdsNU5ldlRwMlUw
    YlZ0VFJoSFFETExRTnFBNWpNOUxuYmxtWVA2Yk1pMHZoL1Q1QXZWcDI1b3ltSURtUlh2THMydHZB
    L3F0bEROcWxoeGVWSDczU1RtV1d2YTNOVFV0anhjSmFKNjF0dzFvN2VYWjM4dDg1cTlEcHMzVlZx
    YmxmUzN6cHc5K0tQbUMzYkp4MjVyeVJ3S2FmN1BnTnFDL1NwMzVyR2FkZWFwU256NHI5ZW5SMC9w
    R3NLMHBmeVNnK2R0QzI0QStsRHJ6eVpKMTVxbEtmZnFrMUtkcmp2QnRhOHAvRU5BOEtyTXphbThE
    dWx1ZWZiUTY4MVRsbUpkWU5uNVorZ0lFTkkvaGZGbDVkc1p0Q2VaQnk3T2oybHMyL3E3eXRMeFBw
    VS9ZT0FHOWNlVUJWYTNiNnYxdFFNUFZtYWNxOWVuYTI1cCs5dkFRQVUyTmtmT3oyNEN1elFMYm1s
    b212bkVDbXYrZXVRV3VYOXNHZEczMnRqV2R1N1krZDkvUUdBSE5YSGJiZ0o2M1hHZWVxdFNuenhm
    WTFwUU5FZEFjNnFCdFFOZG13VzFOMlFBQnpWUVBlOHV6YTY2NGExSnBrNVBLMjVxeWNnS2FLZjdl
    Qm5TTDVZeWg5cGFOMTk3V2xKVVMwSXhXZXh2UXRkbmIxaFJHRWRBQVFRbG9nS0FFTkVCUUFob2dL
    QUVORUpTQUJnaEtRQU1FSmFBQmdoTFFBRUVKYUlDZ0JEUkFVQUlhSUNnQkRSQ1VnQVlJU2tBREJD
    V2dBWUlTMEFCQkNXaUFvQVEwUUZBQ0dpQW9BUTBRbElBR0NFcEFBd1Fsb0FHQ0V0QUFRUWxvZ0tB
    RU5FQlFBaG9nS0FFTkVKU0FCZ2hLUUFNRUphQUJnaExRQUVFSmFJQ2dCRFJBVUFJYUlDZ0JEUkNV
    Z0FZSVNrQURCQ1dnQVlJUzBBQkJDV2lBb0FRMFFGQUNtdEZTU20rMDJqamFqQ2tFTkZQY3BaUSth
    YmxoU2x2ZHRYQ3N4Q0tnbVNLUEJxOVNTajlTU3FkYThIbTViWEliNWJZcWJRYWpDR2dPa2NNNWgz
    UU82N2RhOGw5eVcrUTJ5VzFUMmdnbUVkRE1JZC9DLzB3cGZkMXlyVFdmZTI2RDNCYWxUZUFnQXBx
    SG1Wb2dCL09YRXRRZnQ5YXE1WngvbGphWTYwdHFycjZoVVFLYWY4N2NBcm5VY1ZQcTArL1gzcnI1
    SEV1ZCthYWMrNXptN2hzYUk2QzVyalJTT3kyajZhczFsajFLT2VPcWpKcHIxSmtmU3Qrd1lRSjY0
    L3ErejBGd1ViRVZQcFZwZVYvWDB0TGxYTzRxMTVrdlN0K3dZUUthSE5KNXBIWmVzU1VlNjlNcHBi
    dVdwK1dWYVhOM005ZVpuOHFoZkY3NmhJMFQwRHdxZ2ZDdTY3cnZGVnZrYlptVzk2T2xhWGxsMnR5
    UE1tMnU1bkhudGo4Unp1d0lhUDdXOS8xOTMvZG5YZGQ5NkxydVY4V1dPUzFsajh2STllbFNaNzRz
    NVl5YUkvL2MxaDl5MitjK3FQaDdhSXlBNWovMGZYL2I5LzFKcVUzWHJJTitqcnBzZkc5NTl1ZUt2
    K2FoMUpyenFQbTI0dStoVVFLYVArcjcvcTlTOXZpcllpdnRsbzMvakZDZkxuWG1ud3NzejM1czI5
    TEc4Q3dCell2eVRJSys3eTlLVU5jYzViMHY5ZW1iWTlTblM1MzVwdFNaYTg3ZnZpM0JiSllHcnhM
    UUc3QmJnbHhHcWZ0dWhvNWFTMzM2UTZsUDE2eVRmdHhOeTF1aVByMjNQUHV1L081YTdrdWQrY1BR
    T25NWnpkODg2YlBOTDZrbnFITEJqclhweldyeUV1UXl2ZTBsbzBldEpTUitUK2lQTWFyV3AvUFBI
    dEEyaC9vOWRnNzRialQveXUrOTIrS1MrbjN5SUJnZE10eHVDZkxJdGhvMU10dXRwcHZRSjJQTnVx
    M3BiaHZRQlk1NzFDckt2VHVkTVRheHBQNDU4aUFZSGZLNkdVSno5S2gxNHBmQkZBZHRhN3JiQm5T
    QjR4d2Rtak9NNWxlNXBQNGw4aUFZSGZLeW1jc09vMGV0QThzcGh4cGRNdWlXTGNtTUtqdk1QSnFm
    MURhdGtnZkI2SkRuN1pZZ1QyaWJJVWFOV3ZkdTAwT0U0WkpmR2lQTEdUVkg4MDB2cVI5S0hnU2pR
    LzdkYmdueWhEWVphK3FEcnFPVkV5S1hYUmI2QWt1dExha2ZTeDRFbzBQK1piY0VlVUpiSEdycUxm
    elQ2WDAxWEpWMldlckI1ZWlGTlF1TjVwOFRla245VlBJZ0dCM3kyQWFmRnhwOXZXVHFRN0RheC8x
    N29kOFI5U0hxYThkZGM5bjY0cmFRQnhhcU5HSnZDZkpsZ0RkRWo5Nk1mMiszdkc4VmordE41YmI1
    VmxZQkR0cHRib0ZOL2NmSTdYSVpaVWs5d3dqbzRCWmNnanpGYmpQK1FTT3pzbXo4NndMYm1zN3Rl
    d25tcjBPWFo1YzJxYjJwL3hSSFhWTFBPQUk2cUFXWElCOXFOekliUEhQZ3liYW1rYmZYdkIrN0Rl
    amVwdjRSN25SZXN1aVNlcVlSMEFHVkd1ZnVEZEd0R0wwWmY5blc5TjBDMjVxT3Rkc0c5TjNRYlVB
    WDNOUi9icnMzc1lmYjhoVUJIY3B1MFVMWjZyTG1oN3ptcVBWMDdNaHNvVzFOaHhxMURlaVRPNTJh
    dGQyYWZmYTJiUGs2NjVKNkRpZWdBOWpOR1M2anI1b2ZrTnZ5U3FVbFJxMWZ4bXpHditDMnBuOHll
    aHZRdlUzOWE5N3AvRDJhejMxWHVXMU95MTNRUVV2cTJhZzFUcXM1NXFxN0JlZFRSNTR6SEhsdTk3
    UHpseU12cVYrU2FiZkJyS2xESWkxQlhuQkZZcVJ0VFd0dEF6cUhWK3Y0MFpiVUg0T0FEbVlOSFJK
    OENYTFVmU3ZtWGgwNGRSdlFpSnN0aGQyaHJ6WUJIVXpMSFJKNUNmSXp4eHB5TS80WnZ0eU9zUTNv
    RUFlWEU1WmVVbi9Jc2M1RlFBZlRhb2NzdER4NzlCTGtWNDQ1N0diOEUwSnp5cGRCeUUzOUI3Yk5F
    dGZhMFplTkMraGdXdXVReXR1QTdxdTIyR0Roa3N6Y1pZY0k1WlEvcVZZeW1QaG1saW1PdXEycGdB
    Nm1sUTZKL05EdGdIT0svUDYrcXlkQi9UdndOcUJWMzdQNDVIekNQTlNzZEg0Q09wTG9IYkwya2N0
    YVp3NUVmVGc2NC9rMWZ5ZjN3bm1OSmFCcmlkd2hHNnY5TFRreXF6WnpZTUh5VFlpTmlWcDhGdkxL
    K1Fqb1NDSjJ5TEVYTFJ4VHErY2VlWUZPYldzNmR3RWRUS1FPV1h0OWI0eVc3aDdXTm9xY2FnM1BT
    UVIwTUJFNnhBcXU1MFd2djYrMURudW9sdXZ2QWpxWVkzZElxVmx1ZmcrRWx5dzRNcnNhY1V4TFRa
    dHJkb09oQlFjZHN6MVRFTkRCSExORFN2RFV2b0REck5JNjFFSWoxbGREZW9Gd1B1cGM0RGt0TkFm
    ODkxeGZaTjVKeUw2cmltL0kyRzBEZWo1MHE4dm9GdHFNLzlOTEg3anlaN1Zxd2FNMzlZK3ViUGw2
    WG5sYjB6ZmxzOFFBQW5xQThvMWY0NXMzYjhLZVF6bS9WdWxYaFo5L2RBdHN4djgvRS8vc0VLTTI5
    VzlOdmhiek5abXZ6VW92Q2ppMTMvUXdBbnFZdWVmaVBwUTNSSjhNZlVOMHkvWTI0Njh4TW52cFFl
    cmNEMWwzZHpxRE4vVnZXYmsyVDhxMU92ZjVSbnNCY2tnQ2VwZzVMNmJ2NVVNKytBM1JhN0UzTWpz
    TC9yTFlwL0t4bnEzNVR1ZFA5dDdFZmpMem05Z0Y5QUFDZWptL3hyNGhlcTM2dnY5ZTZ0TTFSbVp6
    ZXJ6VEtYWG1PY09wT1UvZXhMNnBMNmxqRXREMVBaUTY4OGxhSGliTlpXOWtGckhNYzcyNzB3bHdM
    R0dVaDc4bnBUNjlxVHZBWXhEUWRYMHJENU5XWDJlZXFvek16c3ZJTE1JWDJHMjUwem5mK3AzT1M4
    bzF2YnNMb3BKL2FOaHF6clorV3p4R3VidTR6WHM0SExFK3VhdVJNMEI1aHBJWHVPU1N4NDAybTU4
    UmREMXUvNlk1WnJ2cHMybTBXeVVDR2lBb0FRMFFsSUFHQ0VwQUF3UWxvQUdDRXRBQVFRbG9nS0FF
    TkVCUUFob2dLQUVORUpTQUJnaEtRQU1FSmFBQmdoTFFBRUVKYUlDZ0JEUkFVQUlhSUNnQkRSQ1Vn
    QVlJU2tBREJDV2dBWUlTMEFCQkNXaUFvQVEwUUZBQ0dpQW9BUTBRbElBR0NFcEFBd1Fsb0FHQ0V0
    QUFRUWxvZ0tBRU5FQlFBaG9nS0FFTkVKU0FCZ2hLUUFNRUphQUJnaExRQUVFSmFJQ2dCRFJBVUFJ
    YUlDZ0JEUkNVZ0FZSVNrRFhjNWxTT2wzcnlkV1FVdnJhZGQzN0l4N0MrM0lNREZTdThVdnRWWWVB
    cmljSHpZK1UwbFZLNmUxYVQzSU9LYVdQS2FXN3J1dStkRjMzNW9pSGtuLzNsM3dzK1ppT2VCemg1
    V3M2WDl2NUdqL3lsK3FxQ2VqNlBuVmQ5ek9QekZKS3h3eWZjRkpLZWNTYVArQTNYZGRGK2hMTHgz
    S1RqeTBmWTREakNTTmZ3K1V1NDJlNXRxbElRQy9qVFJrZDVxRGUvRVZkUHVTWDVVTWV1UXgwV3Zy
    czBwZnJZNzk5S24xMjdEdWR6UkRRd3p6TTlIUHl5T3hxeXlPemxOTG5ydXR5T2VOemdNTVo2dkdZ
    eTdGdnp0NmR6dFdNZHpwemZhWldUVUFQY3p2eno5dU56SzYyTWpMTEQ1TktuZmx5NXRIWHI0bC9O
    dGFiOHVEM2Jpc1BmOHVkemxXbE81MjVQMU9ySktBSDZQcytmOUR2Sy96b1QyVmt0dHFaQStWaDBv
    L3lNS2xHbmZsL0ovN1pWRy9Mdzk4ZmEzNzRXNjdKdTBwMTV2dnltZUlWQW5xNGkwby9kNVV6Qi9Z
    ZUp0MVZyRFBuRC9uMUMzOSsvY29JK3hDbnV5L1hOZDBGTFRTanB0Wm5pV01xdDhsanpSWU8rU0hK
    aE44L1Z2TWpzOUpPdnl1MzA5MlFPbjZwbjk1VlBwYmZyVC84M2QzcFZHNm5OR2M3SFRzUENOZ2g1
    UmgrVGppT3NacWJPUkMxYlhhelJoWTRycCt0QlVETGJTT2dnNG5VSVF1TkVuKzNNSE5ndDJpaGNs
    dWtRMmUvN0dZakxIQ2NUU3hPeXRmV1F0ZHdsYnNMQVIxTXRBN1orc2hzVjJkZXFKd3hXMzErVjJl
    dGZNeS9vOWFuMTNJWEtLQ0RpZG9oQzlidmJxS016TW9keENJaFYvRWNsdnB5Q1ZHZkx0ZnBUZVh6
    VFVzOVJ4SFF3VVR2a04xYzN3bkhPTmJSUm1ZTGx3bXFuK051cnU4QzUzTzB4VWw3ZHpxMUxUcEhY
    RUFIMDBxSHRGN2IrOE01TFJsa3graXowelY5OGV5ZDEycWZsUWpvWUZycWtEVUYycFpLQVdzbzNY
    UXIvc0o1NWh6SEV0QzF0TmdoTGM4YzJPckR0RllmZm5ZTnphaVo2VndGZENRdGQwaExZYmZGaDU3
    UGFlbWhXc3RmS2xNSjZHRFcwQ0dSUDBSYm56YjRKOUducFMzNTViOVlvdzhnb0lOWlM0ZEV2QTFk
    NDRQTnVVVjc0TGIxaFRjQ09waTFkVWlFQnprTFRnMWN4YWIzQzk1bC9ISEsydHBuMUF3bG9JTlph
    NGNzT0RMN3V2YzdWN1ZvWVduSHF0TXZWQ0pyNGs1SFFBZXo1ZzVaZURIQlVVZUFhN0x3SGNpcUYw
    R05KYUNEMlVLSExEaXlyYVdKRFo3bXRsQU52NmJRTTJxZXM0VThzR0YvTUgzZjU3ZE5uSFZkOTZI
    aVp2TzE1QTN5My9WOS8xZUxiWCtJY3M3dlhubUJRRVQ1R3Z1UXI3bDg3VFYyN0tzbm9JUHErLzYy
    Ny91VDh2YUo2Qy9Zek8rWE8rbjcvcnp2KzgyK0REU2ZlMjZEM0JZTnZITXY5OU5GdnNieXRSYmdl
    SGlHZ0E1dWIyUVdjVlNhUjF4NTVQWEJPK2IrWDI2TDNDYTViU3E5eS9KUWYyMzFUcWMxQXJvQlpX
    UjJVWUk2d21nbmo3Nis5WDJmUCtUZkF4eFBTTGx0Y2h2bHRncHlGM1JiZ3ZsaXkzYzZMUkhRRFNu
    MTZRK2xQbjJza2RsMUtXZXM5azNrY3l0dGRYTEUrdlI5cVROL1VHZHVpNEJ1VUtsUEx6MHl1eTBm
    OG5NZjh2SEtsK3Q1K1hKZDZpNW8vMDVIblptNnpIdjhUd3VzS2d2elJwQTFXV0JiMDZOdEE3b1Uw
    K3dJci9MTWdXK2xuTkhhMUxId1NwdWVsRGFla3hrMUhJY1I5T3RtMnRtc3VVVUxMWnRwY1ZLWWJV
    Q1hZZ1JOYzhxc2lwT0o5V21MRm83Z3dNVkpEM3QzT21iVWNEeEcwT09NMk5aMGs4dXpveHF4YkR6
    a05xQkxrUWZCNkpCcFh0alc5UGRhdGdGZG03MXRUWjhMNnREYmdDNWxDM253andESFFHVmxpdFZ0
    R1czdGo3aCtlWkFVVSttWGk1UlNMbC9zdjNUaFh2bHBPd1QwaHBRUHRnOTNRMHBRbThPOFVSNFNB
    Z1Fsb0FHQ0V0QUFRUWxvZ0tBRU5FQlFBaG9nS0FFTkVKU0FCZ2hLUUFNRUphQUJnaExRQUVFSmFJ
    Q2dCRFJBVUFJYUlDZ0JEUkRVRnZhRGZwOVNDbkFZeDFVMjdXY2x2RkhsMGZzQmY2ZHBXd2pveXdE
    SGNIUXBwYnhSLzRVWGk3WXRwZlNwNjdvdlQ5Nk13MG9wY1d4SC9rRG5WL3RmYmIwaFdsWDY3a280
    YjRlQTNwNVBaUlJHUTFKS0gzUGY2Yk50RWREYjlHWHJEZEFncGJvTkV0RGI5TlpEcG5hVXZsTFcy
    Q0FCRGZHOTBVZmJKS0FCZ2hMUUVOK0RQdHFtdnJXelRpbmRxY2NkN0w3diszZU5uOE9tdU81bjBk
    eDEzK0lJK2x1QVkyamR4ZFlib0VHdSs4TTFkOTAzRjlCOTMxOTNYWGNkNEZCYWRXMDFZWHRjOXdk
    cjhycHZzZ2JkOS8xNTEzVm4rWllsd09HMElyZlZXV2s3R3VTNm42VHA2NzY1R3ZSVDV2TU9ZN09r
    ZFhIZEQrTzZCd0FBQUFBQUFBQUFBQUFBWVBNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
    QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFOaU1ydXYrRC9XWnUyRmNZZmExQUFBQUFF
    bEZUa1N1UW1DQyIgLz4KICA8L2RlZnM+Cjwvc3ZnPg==
  authors:
    - name: Backstage Community
  publisher: Red Hat
  # support:
  #   level: tech-preview
  lifecycle: active
  description:: |
    # Azure Container Registry plugin for Backstage

    The Azure Container Registry (ACR) plugin displays information about your container images available in the Azure Container Registry.

    ## Using the ACR plugin in Backstage

    ACR is a front-end plugin that enables you to view information about the container images from your Azure Container Registry in Backstage.

    ### Prerequisites

    - Your Backstage application is installed and running.
    - You have installed the ACR plugin. For installation instructions, see [Installing and configuring the ACR plugin](#installing-and-configuring-the-acr-plugin).

    ### Procedure

    1. Open your Backstage application and select a component from the Catalog page.

    1. Go to the **ACR** tab.

      ![acr-tab](./images/acr-plugin-user1.png)

      The **ACR** tab in the Backstage UI contains a list of container images and related information, such as **TAG**, **CREATED**, **LAST MODIFIED**, and **MANIFEST**.

  instllation: |
    # Installation

    ## Installing and configuring the ACR plugin

    1. Run the following command to install the ACR plugin:

      ```bash
      yarn workspace app add @backstage-community/plugin-acr
      ```

    1. Set the proxy to the desired ACR server in the `app-config.yaml` file as follows:

      ```yaml
      # app-config.yaml
      proxy:
        endpoints:
          '/acr/api':
            target: 'https://mycontainerregistry.azurecr.io/acr/v1/'
            credentials: require
            changeOrigin: true
            headers:
              # If you use Bearer Token for authorization, please replace the 'Basic' with 'Bearer' in the following line.
              Authorization: 'Basic ${ACR_AUTH_TOKEN}'
            # Change to "false" in case of using self hosted artifactory instance with a self-signed certificate
            secure: true
      ```

      > [!NOTE]
      > The value inside each route is either a simple URL string, or an object on the format accepted by [http-proxy-middleware](https://www.npmjs.com/package/http-proxy-middleware). Additionally, it has an optional `credentials` key which can have the following values:
      >
      > - `require`: Callers must provide Backstage user or service credentials with each request. The credentials are not forwarded to the proxy target. This is the **default**.
      > - `forward`: Callers must provide Backstage user or service credentials with each request, and those credentials are forwarded to the proxy target.
      > - `dangerously-allow-unauthenticated`: No Backstage credentials are required to access this proxy target. The target can still apply its own credentials checks, but the proxy will not help block non-Backstage-blessed callers. If you also add allowedHeaders: ['Authorization'] to an endpoint configuration, then the Backstage token (if provided) WILL be forwarded.
      >
      > Note that if you have `backend.auth.dangerouslyDisableDefaultAuthPolicy` set to true, the credentials value does not apply; the proxy will behave as if all endpoints were set to dangerously-allow-unauthenticated.

    1. Set the authorization using one of the following options:

      - Basic authorization:

        - Navigate to the ACR portal and go to the **Access Keys** tab.
        - Retrieve the username and password of the Admin user and use the [Basic Auth Header Generator tool](https://www.debugbear.com/basic-auth-header-generator) or run `echo printf '<username>:<password>' | base64` in a terminal to convert the credentials into a basic token.
        - Set the generated token as `ACR_AUTH_TOKEN` in environment variables.

      - OAuth2: - Generate bearer access token using the process described in Authenticate with an Azure Container Registry.

        - One method is to generate a bearer token using your basic authorization token, i.e.

          ```bash
                  curl --location 'https://<yourregistry>.azurecr.io/oauth2/token?scope=repository%3A*%3A*&service=<yourregistry>.azurecr.io' \
          --header 'Authorization: Basic <basic_token>'
          ```

        - Set the generated token as `ACR_AUTH_TOKEN` in environment variables. Make sure to replace the `Basic` in the `app-config.yaml` with `Bearer`

    1. Enable an additional tab on the entity view page using the `packages/app/src/components/catalog/EntityPage.tsx` file as follows:

      ```tsx title="packages/app/src/components/catalog/EntityPage.tsx"
      /* highlight-add-start */
      import {
        AcrImagesEntityContent,
        isAcrAvailable,
      } from '@backstage-community/plugin-acr';

      /* highlight-add-end */

      const serviceEntityPage = (
        <EntityLayout>
          // ...
          {/* highlight-add-start */}
          <EntityLayout.Route if={isAcrAvailable} path="/acr" title="ACR images">
            <AcrImagesEntityContent />
          </EntityLayout.Route>
          {/* highlight-add-end */}
        </EntityLayout>
      );
      ```

    1. Annotate your entity using the following annotations:

      ```yaml
      metadata:
        annotations:
          'azure-container-registry/repository-name': `<REPOSITORY-NAME>',
      ```

    ## Use new frontend system

    1. Install the frontend plugin:

      ```sh
      yarn workspace app add @backstage-community/plugin-acr
      ```

    2. Enable the plugin in your `packages/app(-next)/src/App.tsx`:

      After all other imports:

      ```tsx
      import acrPlugin from '@backstage-community/plugin-acr/alpha';
      ```

      ```tsx
      export const app = createApp({
        features: [
          catalogPlugin,
          catalogImportPlugin,
          userSettingsPlugin,
          acrPlugin,
          // ...
        ],
      });
      ```

  # assets:
  #   relativeTo: https://github.com/backstage/community-plugins/blob/main/workspaces/acr/plugins/acr/README.md
