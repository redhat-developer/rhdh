# yaml-language-server: $schema=https://raw.githubusercontent.com/redhat-developer/rhdh-plugins/refs/heads/main/workspaces/marketplace/json-schema/plugins.json
apiVersion: extensions.backstage.io/v1alpha1
kind: Plugin
metadata:
  name: http-request-scaffolder-action
  namespace: rhdh
  title: Scaffolder HTTP Request Action
  description: |
    An action to fire an arbitrary HTTP request. Use the response in your scaffolder templates. This contains one action: `http:backstage:request`.
  annotations:
    extensions.backstage.io/pre-installed: 'true'
  tags: 
    - scaffolder
  links:
    - url: https://github.com/RoadieHQ/roadie-backstage-plugins/blob/main/plugins/scaffolder-actions/scaffolder-backend-module-http-request/README.md
      title: readme  
    - title: Homepage
      url: https://red.ht/rhdh
    - title: Bugs
      url: https://issues.redhat.com/browse/RHIDP
    - title: Documentation for Red Hat Developer Hub
      url: https://docs.redhat.com/en/documentation/red_hat_developer_hub
    - title: Source Code
      url: https://github.com/redhat-developer/rhdh/tree/main/dynamic-plugins/wrappers/
spec:
  author: Roadie
  publisher: Red Hat
  support: tech-preview
  lifecycle: active

  categories:
    - Scaffolder

  highlights: 
    - Fire arbitrary HTTP requests
    - Use the response in your scaffolder templates

  description: |
    An action to fire an arbitrary HTTP request. Use the response in your scaffolder templates. This contains one action: `http:backstage:request`.

    The `http:backstage:request` action allows the task to call any of the backstage APIs available to the user that triggers it. 
    The action takes care of passing the authentication token of the user to the task execution so that the action can perform actions 
    on behalf of the user that triggers it.

    ## Adding The Plugin To Red Hat Developer Hub

    See the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub) 
    for further instructions on how to add, enable, configure, and remove plugins in your instance.

    ## Configuring The Plugin ##

    Plugins often need additional configuration to work correctly - particularly those that integrate with other 
    systems. See the original source code repository, the software vendor, or the [Red Hat Developer Hub documentation](https://docs.redhat.com/en/documentation/red_hat_developer_hub)
    for further details regarding the configuration required.


  icon: data:image/svg+xml;base64,
    PHN2ZyB3aWR0aD0iNzAiIGhlaWdodD0iNzAiIHZpZXdCb3g9IjAgMCA3MCA3MCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93
    d3cudzMub3JnLzIwMDAvc3ZnIj4KPHJlY3Qgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiBmaWxsPSIjQzRDNEM0Ii8+Cjwvc3ZnPgo=

  packages:
    - roadiehq-scaffolder-backend-module-http-request-dynamic


